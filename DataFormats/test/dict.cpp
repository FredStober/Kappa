//
// File generated by rootcint at Wed Mar 31 17:11:48 2010

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::Cartesian3D< float > Cartesian3DlEfloatgR;
      #else
      class Cartesian3DlEfloatgR  {
         public:
         //friend XX;
         typedef void* (*Scalar)() ;
         float fX; //x coordinate
         float fY; //y coordinate
         float fZ; //z coordinate
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::PositionVector3D< ::ROOT::Math::Cartesian3D< float >, ::ROOT::Math::DefaultCoordinateSystemTag > PositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR;
      #else
      class PositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR  {
         public:
         //friend XX;
         typedef void* (*Scalar)() ;
         typedef ::ROOT::Math::Cartesian3D<float> CoordinateType;
         typedef ::ROOT::Math::DefaultCoordinateSystemTag CoordinateSystemTag;
         ::ROOT::Math::Cartesian3D< float > fCoordinates; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::PtEtaPhiM4D< float > PtEtaPhiM4DlEfloatgR;
      #else
      class PtEtaPhiM4DlEfloatgR  {
         public:
         //friend XX;
         typedef void* (*Scalar)() ;
         float fPt; //
         float fEta; //
         float fPhi; //
         float fM; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::LorentzVector< ::ROOT::Math::PtEtaPhiM4D< float >  > LorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR;
      #else
      class LorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR  {
         public:
         //friend XX;
         typedef void* (*Scalar)() ;
         typedef ::ROOT::Math::PtEtaPhiM4D<float> CoordinateType;
         typedef ::ROOT::Math::Cartesian3D<float> Cartesian3D;
         typedef ::ROOT::Math::DisplacementVector3D< ::ROOT::Math::Cartesian3D<float>, ::ROOT::Math::DefaultCoordinateSystemTag> BetaVector;
         ::ROOT::Math::PtEtaPhiM4D< float > fCoordinates; //internal coordinate system
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::DisplacementVector3D< ::ROOT::Math::Cartesian3D< float >, ::ROOT::Math::DefaultCoordinateSystemTag > DisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR;
      #else
      class DisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR  {
         public:
         //friend XX;
         typedef void* (*Scalar)() ;
         typedef ::ROOT::Math::Cartesian3D<float> CoordinateType;
         typedef ::ROOT::Math::DefaultCoordinateSystemTag CoordinateSystemTag;
         ::ROOT::Math::Cartesian3D< float > fCoordinates; //internal coordinate system
      };
      #endif
      } } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KDataLV KDataLV;
      #else
      class KDataLV  {
         public:
         //friend XX;
         typedef ::ROOT::Math::LorentzVector< ::ROOT::Math::PtEtaPhiM4D<float> > KInternalLV;
         ::ROOT::Math::LorentzVector< ::ROOT::Math::PtEtaPhiM4D< float >  > p4; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KDataVertex KDataVertex;
      #else
      class KDataVertex  {
         public:
         //friend XX;
         ::ROOT::Math::PositionVector3D< ::ROOT::Math::Cartesian3D< float >, ::ROOT::Math::DefaultCoordinateSystemTag > position; //
         bool fake; //
         unsigned int nTracks; //
         float chi2; //
         float nDOF; //
         ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepSym< double, 3 >  > covariance; //
      };
      #endif

      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepSym< double, 3 >  > SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR;
      #else
      class SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepSym< double, 3 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepSym< double, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepSym< double, 3 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepSym< double, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<double,3> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< double, 3 > fRep; //
      };
      #endif
      } } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KDataTrack KDataTrack;
      #else
      class KDataTrack  :  public ::KDataLV {
         public:
         //friend XX;
         ::ROOT::Math::PositionVector3D< ::ROOT::Math::Cartesian3D< float >, ::ROOT::Math::DefaultCoordinateSystemTag > ref; //reference point ("vertex")
         char charge; //
         float chi2; //
         float nDOF; //
         float errPt; //
         float errEta; //
         float errPhi; //
         float errDxy; //
         float errDz; //
         int nPixelHits; //
         int nStripHits; //dp
         int quality; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KDataJet KDataJet;
      #else
      class KDataJet  :  public ::KDataLV {
         public:
         //friend XX;
         double emf; //
         double area; //
         int n90; //
         int n90Hits; //
         double noiseHCAL; //
         double detectorEta; //
         double fHPD; //
         double fRBX; //
         int nTracksAtCalo; //
         int nTracksAtVertex; //
         int nConst; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KLV KLV;
      #else
      class KLV  {
         public:
         //friend XX;
         typedef ::ROOT::Math::LorentzVector< ::ROOT::Math::PtEtaPhiM4D<double> > KInternalLV;
         ::ROOT::Math::LorentzVector< ::ROOT::Math::PtEtaPhiM4D< double >  > p4; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KDataMET KDataMET;
      #else
      class KDataMET  :  public ::KDataLV {
         public:
         //friend XX;
         double sumEt; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KParton KParton;
      #else
      class KParton  {
         public:
         //friend XX;
         typedef ::ROOT::Math::LorentzVector< ::ROOT::Math::PtEtaPhiM4D<double> > KInternalLV;
         ::ROOT::Math::LorentzVector< ::ROOT::Math::PtEtaPhiM4D< double >  > p4; //
         unsigned int pdgid; //
         unsigned int children; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KProvenance KProvenance;
      #else
      class KProvenance  {
         public:
         //friend XX;
         vector< ::string > names; //
         vector< ::string > branches; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KLumiMetadata KLumiMetadata;
      #else
      class KLumiMetadata  {
         public:
         //friend XX;
         unsigned long nLumi; //
         unsigned long nRun; //
         vector< ::string > hltNames; //
         vector< ::string > hltNamesMuons; //
         vector< ::string > discrTau; //
         vector< ::string > discrTauPF; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KGenLumiMetadata KGenLumiMetadata;
      #else
      class KGenLumiMetadata  :  public ::KLumiMetadata {
         public:
         //friend XX;
         double xSectionExt; //
         double xSectionInt; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KEventMetadata KEventMetadata;
      #else
      class KEventMetadata  {
         public:
         //friend XX;
         G__uint64 bitsL1; //
         G__uint64 bitsHLT; //
         unsigned long bitsUserFlags; //
         unsigned long nEvent; //
         unsigned long nLumi; //
         unsigned long nRun; //
         unsigned long nBX; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KGenEventMetadata KGenEventMetadata;
      #else
      class KGenEventMetadata  :  public ::KEventMetadata {
         public:
         //friend XX;
         double weight; //
         double binValue; //
         double alphaQCD; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::KDataMuon KDataMuon;
      #else
      class KDataMuon  :  public ::KDataLV {
         public:
         //friend XX;
         char charge; //
         ::KDataTrack track; //
         ::KDataTrack globalTrack; //
         ::KDataTrack innerTrack; //
         ::KDataVertex vertex; //
         char type; //
         bool isTrackerMuon; //
         bool isCaloMuon; //
         bool isStandAloneMuon; //
         bool isGlobalMuon; //
         float hcalIso03; //
         float ecalIso03; //
         float trackIso03; //
         float hcalIso05; //
         float ecalIso05; //
         float trackIso05; //
         float hcalIso06; //
         float ecalIso06; //
         float trackIso06; //
         unsigned int isGoodMuon; //bitmask
         float caloComp; //
         float segComp; //
         int numberOfChambers; //
         int trackHits; //
         int timeNDof; //
         float timeAtIpInOut; //
         float timeAtIpInOutErr; //
         float timeAtIpOutIn; //
         float timeAtIpOutInErr; //
         int direction; //
         unsigned long hltMatch; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ROOTcLcLMathcLcLCartesian3DlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLCartesian3DlEfloatgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLCartesian3DlEfloatgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLCartesian3DlEfloatgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLCartesian3DlEfloatgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLCartesian3DlEfloatgR(void *p);
   static void destruct_ROOTcLcLMathcLcLCartesian3DlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::Cartesian3D<float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::Cartesian3D<float>) == sizeof(::ROOT::Shadow::ROOT::Math::Cartesian3DlEfloatgR));
      ::ROOT::Math::Cartesian3D<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::Cartesian3D<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::Cartesian3D<float>", "/usr/include/root/Math/GenVector/Cartesian3D.h", 51,
                  typeid(::ROOT::Math::Cartesian3D<float>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLCartesian3DlEfloatgR_ShowMembers, &ROOTcLcLMathcLcLCartesian3DlEfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::Cartesian3D<float>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLCartesian3DlEfloatgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLCartesian3DlEfloatgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLCartesian3DlEfloatgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLCartesian3DlEfloatgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLCartesian3DlEfloatgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::Cartesian3D<float>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::Cartesian3D<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::Cartesian3D<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLCartesian3DlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::Cartesian3D<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_Dictionary();
   static void *new_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p);
   static void destruct_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>) == sizeof(::ROOT::Shadow::ROOT::Math::PositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
      ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>", "/usr/include/root/Math/GenVector/PositionVector3D.h", 63,
                  typeid(::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_ShowMembers, &ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(void *p);
   static void destruct_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::PtEtaPhiM4D<float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::PtEtaPhiM4D<float>) == sizeof(::ROOT::Shadow::ROOT::Math::PtEtaPhiM4DlEfloatgR));
      ::ROOT::Math::PtEtaPhiM4D<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::PtEtaPhiM4D<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::PtEtaPhiM4D<float>", "/usr/include/root/Math/GenVector/PtEtaPhiM4D.h", 56,
                  typeid(::ROOT::Math::PtEtaPhiM4D<float>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR_ShowMembers, &ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::PtEtaPhiM4D<float>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::PtEtaPhiM4D<float>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::PtEtaPhiM4D<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::PtEtaPhiM4D<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::PtEtaPhiM4D<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >) == sizeof(::ROOT::Shadow::ROOT::Math::LorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
      ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >", "/usr/include/root/Math/GenVector/LorentzVector.h", 54,
                  typeid(::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR_ShowMembers, &ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_Dictionary();
   static void *new_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p);
   static void destruct_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>) == sizeof(::ROOT::Shadow::ROOT::Math::DisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
      ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>", "/usr/include/root/Math/GenVector/DisplacementVector3D.h", 75,
                  typeid(::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_ShowMembers, &ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KDataLV_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KDataLV_Dictionary();
   static void *new_KDataLV(void *p = 0);
   static void *newArray_KDataLV(Long_t size, void *p);
   static void delete_KDataLV(void *p);
   static void deleteArray_KDataLV(void *p);
   static void destruct_KDataLV(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KDataLV*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KDataLV) == sizeof(::ROOT::Shadow::KDataLV));
      ::KDataLV *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KDataLV),0);
      static ::ROOT::TGenericClassInfo 
         instance("KDataLV", "../src/../interface/KBasic.h", 9,
                  typeid(::KDataLV), DefineBehavior(ptr, ptr),
                  (void*)&KDataLV_ShowMembers, &KDataLV_Dictionary, isa_proxy, 4,
                  sizeof(::KDataLV) );
      instance.SetNew(&new_KDataLV);
      instance.SetNewArray(&newArray_KDataLV);
      instance.SetDelete(&delete_KDataLV);
      instance.SetDeleteArray(&deleteArray_KDataLV);
      instance.SetDestructor(&destruct_KDataLV);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KDataLV*)
   {
      return GenerateInitInstanceLocal((::KDataLV*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KDataLV*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KDataLV_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KDataLV*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KDataVertex_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KDataVertex_Dictionary();
   static void *new_KDataVertex(void *p = 0);
   static void *newArray_KDataVertex(Long_t size, void *p);
   static void delete_KDataVertex(void *p);
   static void deleteArray_KDataVertex(void *p);
   static void destruct_KDataVertex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KDataVertex*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KDataVertex) == sizeof(::ROOT::Shadow::KDataVertex));
      ::KDataVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KDataVertex),0);
      static ::ROOT::TGenericClassInfo 
         instance("KDataVertex", "../src/../interface/KBasic.h", 16,
                  typeid(::KDataVertex), DefineBehavior(ptr, ptr),
                  (void*)&KDataVertex_ShowMembers, &KDataVertex_Dictionary, isa_proxy, 4,
                  sizeof(::KDataVertex) );
      instance.SetNew(&new_KDataVertex);
      instance.SetNewArray(&newArray_KDataVertex);
      instance.SetDelete(&delete_KDataVertex);
      instance.SetDeleteArray(&deleteArray_KDataVertex);
      instance.SetDestructor(&destruct_KDataVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KDataVertex*)
   {
      return GenerateInitInstanceLocal((::KDataVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KDataVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KDataVertex_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KDataVertex*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<double,3>*)
   {
      ::ROOT::Math::MatRepSym<double,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<double,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<double,3>", "/usr/include/root/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<double,3>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::MatRepSym<double,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<double,3>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<double,3>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
      ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >", "/usr/include/root/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KDataTrack_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KDataTrack_Dictionary();
   static void *new_KDataTrack(void *p = 0);
   static void *newArray_KDataTrack(Long_t size, void *p);
   static void delete_KDataTrack(void *p);
   static void deleteArray_KDataTrack(void *p);
   static void destruct_KDataTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KDataTrack*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KDataTrack) == sizeof(::ROOT::Shadow::KDataTrack));
      ::KDataTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KDataTrack),0);
      static ::ROOT::TGenericClassInfo 
         instance("KDataTrack", "../src/../interface/KBasic.h", 28,
                  typeid(::KDataTrack), DefineBehavior(ptr, ptr),
                  (void*)&KDataTrack_ShowMembers, &KDataTrack_Dictionary, isa_proxy, 4,
                  sizeof(::KDataTrack) );
      instance.SetNew(&new_KDataTrack);
      instance.SetNewArray(&newArray_KDataTrack);
      instance.SetDelete(&delete_KDataTrack);
      instance.SetDeleteArray(&deleteArray_KDataTrack);
      instance.SetDestructor(&destruct_KDataTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KDataTrack*)
   {
      return GenerateInitInstanceLocal((::KDataTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KDataTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KDataTrack_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KDataTrack*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KDataJet_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KDataJet_Dictionary();
   static void *new_KDataJet(void *p = 0);
   static void *newArray_KDataJet(Long_t size, void *p);
   static void delete_KDataJet(void *p);
   static void deleteArray_KDataJet(void *p);
   static void destruct_KDataJet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KDataJet*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KDataJet) == sizeof(::ROOT::Shadow::KDataJet));
      ::KDataJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KDataJet),0);
      static ::ROOT::TGenericClassInfo 
         instance("KDataJet", "../src/../interface/KBasic.h", 81,
                  typeid(::KDataJet), DefineBehavior(ptr, ptr),
                  (void*)&KDataJet_ShowMembers, &KDataJet_Dictionary, isa_proxy, 4,
                  sizeof(::KDataJet) );
      instance.SetNew(&new_KDataJet);
      instance.SetNewArray(&newArray_KDataJet);
      instance.SetDelete(&delete_KDataJet);
      instance.SetDeleteArray(&deleteArray_KDataJet);
      instance.SetDestructor(&destruct_KDataJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KDataJet*)
   {
      return GenerateInitInstanceLocal((::KDataJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KDataJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KDataJet_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KDataJet*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KLV_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KLV_Dictionary();
   static void *new_KLV(void *p = 0);
   static void *newArray_KLV(Long_t size, void *p);
   static void delete_KLV(void *p);
   static void deleteArray_KLV(void *p);
   static void destruct_KLV(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KLV*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KLV) == sizeof(::ROOT::Shadow::KLV));
      ::KLV *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KLV),0);
      static ::ROOT::TGenericClassInfo 
         instance("KLV", "../src/../interface/KBasic.h", 103,
                  typeid(::KLV), DefineBehavior(ptr, ptr),
                  (void*)&KLV_ShowMembers, &KLV_Dictionary, isa_proxy, 4,
                  sizeof(::KLV) );
      instance.SetNew(&new_KLV);
      instance.SetNewArray(&newArray_KLV);
      instance.SetDelete(&delete_KLV);
      instance.SetDeleteArray(&deleteArray_KLV);
      instance.SetDestructor(&destruct_KLV);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KLV*)
   {
      return GenerateInitInstanceLocal((::KLV*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KLV*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KLV_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KLV*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KDataMET_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KDataMET_Dictionary();
   static void *new_KDataMET(void *p = 0);
   static void *newArray_KDataMET(Long_t size, void *p);
   static void delete_KDataMET(void *p);
   static void deleteArray_KDataMET(void *p);
   static void destruct_KDataMET(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KDataMET*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KDataMET) == sizeof(::ROOT::Shadow::KDataMET));
      ::KDataMET *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KDataMET),0);
      static ::ROOT::TGenericClassInfo 
         instance("KDataMET", "../src/../interface/KBasic.h", 110,
                  typeid(::KDataMET), DefineBehavior(ptr, ptr),
                  (void*)&KDataMET_ShowMembers, &KDataMET_Dictionary, isa_proxy, 4,
                  sizeof(::KDataMET) );
      instance.SetNew(&new_KDataMET);
      instance.SetNewArray(&newArray_KDataMET);
      instance.SetDelete(&delete_KDataMET);
      instance.SetDeleteArray(&deleteArray_KDataMET);
      instance.SetDestructor(&destruct_KDataMET);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KDataMET*)
   {
      return GenerateInitInstanceLocal((::KDataMET*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KDataMET*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KDataMET_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KDataMET*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KParton_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KParton_Dictionary();
   static void *new_KParton(void *p = 0);
   static void *newArray_KParton(Long_t size, void *p);
   static void delete_KParton(void *p);
   static void deleteArray_KParton(void *p);
   static void destruct_KParton(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KParton*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KParton) == sizeof(::ROOT::Shadow::KParton));
      ::KParton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KParton),0);
      static ::ROOT::TGenericClassInfo 
         instance("KParton", "../src/../interface/KBasic.h", 123,
                  typeid(::KParton), DefineBehavior(ptr, ptr),
                  (void*)&KParton_ShowMembers, &KParton_Dictionary, isa_proxy, 4,
                  sizeof(::KParton) );
      instance.SetNew(&new_KParton);
      instance.SetNewArray(&newArray_KParton);
      instance.SetDelete(&delete_KParton);
      instance.SetDeleteArray(&deleteArray_KParton);
      instance.SetDestructor(&destruct_KParton);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KParton*)
   {
      return GenerateInitInstanceLocal((::KParton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KParton*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KParton_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KParton*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KProvenance_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KProvenance_Dictionary();
   static void *new_KProvenance(void *p = 0);
   static void *newArray_KProvenance(Long_t size, void *p);
   static void delete_KProvenance(void *p);
   static void deleteArray_KProvenance(void *p);
   static void destruct_KProvenance(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KProvenance*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KProvenance) == sizeof(::ROOT::Shadow::KProvenance));
      ::KProvenance *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KProvenance),0);
      static ::ROOT::TGenericClassInfo 
         instance("KProvenance", "../src/../interface/KMetadata.h", 10,
                  typeid(::KProvenance), DefineBehavior(ptr, ptr),
                  (void*)&KProvenance_ShowMembers, &KProvenance_Dictionary, isa_proxy, 4,
                  sizeof(::KProvenance) );
      instance.SetNew(&new_KProvenance);
      instance.SetNewArray(&newArray_KProvenance);
      instance.SetDelete(&delete_KProvenance);
      instance.SetDeleteArray(&deleteArray_KProvenance);
      instance.SetDestructor(&destruct_KProvenance);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KProvenance*)
   {
      return GenerateInitInstanceLocal((::KProvenance*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KProvenance*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KProvenance_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KProvenance*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KLumiMetadata_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KLumiMetadata_Dictionary();
   static void *new_KLumiMetadata(void *p = 0);
   static void *newArray_KLumiMetadata(Long_t size, void *p);
   static void delete_KLumiMetadata(void *p);
   static void deleteArray_KLumiMetadata(void *p);
   static void destruct_KLumiMetadata(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KLumiMetadata*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KLumiMetadata) == sizeof(::ROOT::Shadow::KLumiMetadata));
      ::KLumiMetadata *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KLumiMetadata),0);
      static ::ROOT::TGenericClassInfo 
         instance("KLumiMetadata", "../src/../interface/KMetadata.h", 18,
                  typeid(::KLumiMetadata), DefineBehavior(ptr, ptr),
                  (void*)&KLumiMetadata_ShowMembers, &KLumiMetadata_Dictionary, isa_proxy, 4,
                  sizeof(::KLumiMetadata) );
      instance.SetNew(&new_KLumiMetadata);
      instance.SetNewArray(&newArray_KLumiMetadata);
      instance.SetDelete(&delete_KLumiMetadata);
      instance.SetDeleteArray(&deleteArray_KLumiMetadata);
      instance.SetDestructor(&destruct_KLumiMetadata);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KLumiMetadata*)
   {
      return GenerateInitInstanceLocal((::KLumiMetadata*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KLumiMetadata*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KLumiMetadata_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KLumiMetadata*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KGenLumiMetadata_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KGenLumiMetadata_Dictionary();
   static void *new_KGenLumiMetadata(void *p = 0);
   static void *newArray_KGenLumiMetadata(Long_t size, void *p);
   static void delete_KGenLumiMetadata(void *p);
   static void deleteArray_KGenLumiMetadata(void *p);
   static void destruct_KGenLumiMetadata(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KGenLumiMetadata*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KGenLumiMetadata) == sizeof(::ROOT::Shadow::KGenLumiMetadata));
      ::KGenLumiMetadata *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KGenLumiMetadata),0);
      static ::ROOT::TGenericClassInfo 
         instance("KGenLumiMetadata", "../src/../interface/KMetadata.h", 29,
                  typeid(::KGenLumiMetadata), DefineBehavior(ptr, ptr),
                  (void*)&KGenLumiMetadata_ShowMembers, &KGenLumiMetadata_Dictionary, isa_proxy, 4,
                  sizeof(::KGenLumiMetadata) );
      instance.SetNew(&new_KGenLumiMetadata);
      instance.SetNewArray(&newArray_KGenLumiMetadata);
      instance.SetDelete(&delete_KGenLumiMetadata);
      instance.SetDeleteArray(&deleteArray_KGenLumiMetadata);
      instance.SetDestructor(&destruct_KGenLumiMetadata);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KGenLumiMetadata*)
   {
      return GenerateInitInstanceLocal((::KGenLumiMetadata*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KGenLumiMetadata*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KGenLumiMetadata_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KGenLumiMetadata*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KEventMetadata_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KEventMetadata_Dictionary();
   static void *new_KEventMetadata(void *p = 0);
   static void *newArray_KEventMetadata(Long_t size, void *p);
   static void delete_KEventMetadata(void *p);
   static void deleteArray_KEventMetadata(void *p);
   static void destruct_KEventMetadata(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KEventMetadata*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KEventMetadata) == sizeof(::ROOT::Shadow::KEventMetadata));
      ::KEventMetadata *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KEventMetadata),0);
      static ::ROOT::TGenericClassInfo 
         instance("KEventMetadata", "../src/../interface/KMetadata.h", 37,
                  typeid(::KEventMetadata), DefineBehavior(ptr, ptr),
                  (void*)&KEventMetadata_ShowMembers, &KEventMetadata_Dictionary, isa_proxy, 4,
                  sizeof(::KEventMetadata) );
      instance.SetNew(&new_KEventMetadata);
      instance.SetNewArray(&newArray_KEventMetadata);
      instance.SetDelete(&delete_KEventMetadata);
      instance.SetDeleteArray(&deleteArray_KEventMetadata);
      instance.SetDestructor(&destruct_KEventMetadata);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KEventMetadata*)
   {
      return GenerateInitInstanceLocal((::KEventMetadata*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KEventMetadata*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KEventMetadata_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KEventMetadata*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KGenEventMetadata_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KGenEventMetadata_Dictionary();
   static void *new_KGenEventMetadata(void *p = 0);
   static void *newArray_KGenEventMetadata(Long_t size, void *p);
   static void delete_KGenEventMetadata(void *p);
   static void deleteArray_KGenEventMetadata(void *p);
   static void destruct_KGenEventMetadata(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KGenEventMetadata*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KGenEventMetadata) == sizeof(::ROOT::Shadow::KGenEventMetadata));
      ::KGenEventMetadata *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KGenEventMetadata),0);
      static ::ROOT::TGenericClassInfo 
         instance("KGenEventMetadata", "../src/../interface/KMetadata.h", 53,
                  typeid(::KGenEventMetadata), DefineBehavior(ptr, ptr),
                  (void*)&KGenEventMetadata_ShowMembers, &KGenEventMetadata_Dictionary, isa_proxy, 4,
                  sizeof(::KGenEventMetadata) );
      instance.SetNew(&new_KGenEventMetadata);
      instance.SetNewArray(&newArray_KGenEventMetadata);
      instance.SetDelete(&delete_KGenEventMetadata);
      instance.SetDeleteArray(&deleteArray_KGenEventMetadata);
      instance.SetDestructor(&destruct_KGenEventMetadata);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KGenEventMetadata*)
   {
      return GenerateInitInstanceLocal((::KGenEventMetadata*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KGenEventMetadata*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KGenEventMetadata_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KGenEventMetadata*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void KDataMuon_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void KDataMuon_Dictionary();
   static void *new_KDataMuon(void *p = 0);
   static void *newArray_KDataMuon(Long_t size, void *p);
   static void delete_KDataMuon(void *p);
   static void deleteArray_KDataMuon(void *p);
   static void destruct_KDataMuon(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::KDataMuon*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::KDataMuon) == sizeof(::ROOT::Shadow::KDataMuon));
      ::KDataMuon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::KDataMuon),0);
      static ::ROOT::TGenericClassInfo 
         instance("KDataMuon", "../src/../interface/KMuon.h", 7,
                  typeid(::KDataMuon), DefineBehavior(ptr, ptr),
                  (void*)&KDataMuon_ShowMembers, &KDataMuon_Dictionary, isa_proxy, 4,
                  sizeof(::KDataMuon) );
      instance.SetNew(&new_KDataMuon);
      instance.SetNewArray(&newArray_KDataMuon);
      instance.SetDelete(&delete_KDataMuon);
      instance.SetDeleteArray(&deleteArray_KDataMuon);
      instance.SetDestructor(&destruct_KDataMuon);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::KDataMuon*)
   {
      return GenerateInitInstanceLocal((::KDataMuon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KDataMuon*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void KDataMuon_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::KDataMuon*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::PtEtaPhiM4D<float>.
      typedef ::ROOT::Shadow::ROOT::Math::PtEtaPhiM4DlEfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::PtEtaPhiM4D<float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPt", &sobj->fPt);
      R__insp.Inspect(R__cl, R__parent, "fEta", &sobj->fEta);
      R__insp.Inspect(R__cl, R__parent, "fPhi", &sobj->fPhi);
      R__insp.Inspect(R__cl, R__parent, "fM", &sobj->fM);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::PtEtaPhiM4D<float> : new ::ROOT::Math::PtEtaPhiM4D<float>;
   }
   static void *newArray_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::PtEtaPhiM4D<float>[nElements] : new ::ROOT::Math::PtEtaPhiM4D<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(void *p) {
      delete ((::ROOT::Math::PtEtaPhiM4D<float>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(void *p) {
      delete [] ((::ROOT::Math::PtEtaPhiM4D<float>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(void *p) {
      typedef ::ROOT::Math::PtEtaPhiM4D<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::PtEtaPhiM4D<float>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >.
      typedef ::ROOT::Shadow::ROOT::Math::LorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCoordinates", (void*)&sobj->fCoordinates);
      ::ROOT::GenericShowMembers("ROOT::Math::PtEtaPhiM4D<float>", (void*)&sobj->fCoordinates, R__insp, strcat(R__parent,"fCoordinates."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > : new ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >;
   }
   static void *newArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >[nElements] : new ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(void *p) {
      delete ((::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(void *p) {
      delete [] ((::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(void *p) {
      typedef ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLCartesian3DlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::Cartesian3D<float>.
      typedef ::ROOT::Shadow::ROOT::Math::Cartesian3DlEfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::Cartesian3D<float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fX", &sobj->fX);
      R__insp.Inspect(R__cl, R__parent, "fY", &sobj->fY);
      R__insp.Inspect(R__cl, R__parent, "fZ", &sobj->fZ);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLCartesian3DlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::Cartesian3D<float> : new ::ROOT::Math::Cartesian3D<float>;
   }
   static void *newArray_ROOTcLcLMathcLcLCartesian3DlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::Cartesian3D<float>[nElements] : new ::ROOT::Math::Cartesian3D<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLCartesian3DlEfloatgR(void *p) {
      delete ((::ROOT::Math::Cartesian3D<float>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLCartesian3DlEfloatgR(void *p) {
      delete [] ((::ROOT::Math::Cartesian3D<float>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLCartesian3DlEfloatgR(void *p) {
      typedef ::ROOT::Math::Cartesian3D<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::Cartesian3D<float>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>.
      typedef ::ROOT::Shadow::ROOT::Math::PositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCoordinates", (void*)&sobj->fCoordinates);
      ::ROOT::GenericShowMembers("ROOT::Math::Cartesian3D<float>", (void*)&sobj->fCoordinates, R__insp, strcat(R__parent,"fCoordinates."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> : new ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>;
   }
   static void *newArray_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>[nElements] : new ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p) {
      delete ((::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p) {
      delete [] ((::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p) {
      typedef ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>.
      typedef ::ROOT::Shadow::ROOT::Math::DisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCoordinates", (void*)&sobj->fCoordinates);
      ::ROOT::GenericShowMembers("ROOT::Math::Cartesian3D<float>", (void*)&sobj->fCoordinates, R__insp, strcat(R__parent,"fCoordinates."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> : new ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>;
   }
   static void *newArray_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>[nElements] : new ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p) {
      delete ((::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p) {
      delete [] ((::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void *p) {
      typedef ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,3> : new ::ROOT::Math::MatRepSym<double,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,3>[nElements] : new ::ROOT::Math::MatRepSym<double,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<double,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<double,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<double,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<double,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<double,3>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > : new ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >[nElements] : new ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >

//______________________________________________________________________________
namespace ROOT {
   void KDataLV_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KDataLV.
      typedef ::ROOT::Shadow::KDataLV ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KDataLV*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "p4", (void*)&sobj->p4);
      ::ROOT::GenericShowMembers("RMDataLV", (void*)&sobj->p4, R__insp, strcat(R__parent,"p4."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KDataLV(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataLV : new ::KDataLV;
   }
   static void *newArray_KDataLV(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataLV[nElements] : new ::KDataLV[nElements];
   }
   // Wrapper around operator delete
   static void delete_KDataLV(void *p) {
      delete ((::KDataLV*)p);
   }
   static void deleteArray_KDataLV(void *p) {
      delete [] ((::KDataLV*)p);
   }
   static void destruct_KDataLV(void *p) {
      typedef ::KDataLV current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KDataLV

//______________________________________________________________________________
namespace ROOT {
   void KDataVertex_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KDataVertex.
      typedef ::ROOT::Shadow::KDataVertex ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KDataVertex*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "position", (void*)&sobj->position);
      ::ROOT::GenericShowMembers("RMPoint", (void*)&sobj->position, R__insp, strcat(R__parent,"position."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fake", &sobj->fake);
      R__insp.Inspect(R__cl, R__parent, "nTracks", &sobj->nTracks);
      R__insp.Inspect(R__cl, R__parent, "chi2", &sobj->chi2);
      R__insp.Inspect(R__cl, R__parent, "nDOF", &sobj->nDOF);
      R__insp.Inspect(R__cl, R__parent, "covariance", (void*)&sobj->covariance);
      ::ROOT::GenericShowMembers("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >", (void*)&sobj->covariance, R__insp, strcat(R__parent,"covariance."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KDataVertex(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataVertex : new ::KDataVertex;
   }
   static void *newArray_KDataVertex(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataVertex[nElements] : new ::KDataVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_KDataVertex(void *p) {
      delete ((::KDataVertex*)p);
   }
   static void deleteArray_KDataVertex(void *p) {
      delete [] ((::KDataVertex*)p);
   }
   static void destruct_KDataVertex(void *p) {
      typedef ::KDataVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KDataVertex

//______________________________________________________________________________
namespace ROOT {
   void KDataTrack_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KDataTrack.
      typedef ::ROOT::Shadow::KDataTrack ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KDataTrack*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "ref", (void*)&sobj->ref);
      ::ROOT::GenericShowMembers("RMPoint", (void*)&sobj->ref, R__insp, strcat(R__parent,"ref."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "charge", &sobj->charge);
      R__insp.Inspect(R__cl, R__parent, "chi2", &sobj->chi2);
      R__insp.Inspect(R__cl, R__parent, "nDOF", &sobj->nDOF);
      R__insp.Inspect(R__cl, R__parent, "errPt", &sobj->errPt);
      R__insp.Inspect(R__cl, R__parent, "errEta", &sobj->errEta);
      R__insp.Inspect(R__cl, R__parent, "errPhi", &sobj->errPhi);
      R__insp.Inspect(R__cl, R__parent, "errDxy", &sobj->errDxy);
      R__insp.Inspect(R__cl, R__parent, "errDz", &sobj->errDz);
      R__insp.Inspect(R__cl, R__parent, "nPixelHits", &sobj->nPixelHits);
      R__insp.Inspect(R__cl, R__parent, "nStripHits", &sobj->nStripHits);
      R__insp.Inspect(R__cl, R__parent, "quality", &sobj->quality);
      ::ROOT::GenericShowMembers("KDataLV", ( ::KDataLV * )( (::KDataTrack*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KDataTrack(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataTrack : new ::KDataTrack;
   }
   static void *newArray_KDataTrack(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataTrack[nElements] : new ::KDataTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_KDataTrack(void *p) {
      delete ((::KDataTrack*)p);
   }
   static void deleteArray_KDataTrack(void *p) {
      delete [] ((::KDataTrack*)p);
   }
   static void destruct_KDataTrack(void *p) {
      typedef ::KDataTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KDataTrack

//______________________________________________________________________________
namespace ROOT {
   void KDataJet_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KDataJet.
      typedef ::ROOT::Shadow::KDataJet ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KDataJet*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "emf", &sobj->emf);
      R__insp.Inspect(R__cl, R__parent, "area", &sobj->area);
      R__insp.Inspect(R__cl, R__parent, "n90", &sobj->n90);
      R__insp.Inspect(R__cl, R__parent, "n90Hits", &sobj->n90Hits);
      R__insp.Inspect(R__cl, R__parent, "noiseHCAL", &sobj->noiseHCAL);
      R__insp.Inspect(R__cl, R__parent, "detectorEta", &sobj->detectorEta);
      R__insp.Inspect(R__cl, R__parent, "fHPD", &sobj->fHPD);
      R__insp.Inspect(R__cl, R__parent, "fRBX", &sobj->fRBX);
      R__insp.Inspect(R__cl, R__parent, "nTracksAtCalo", &sobj->nTracksAtCalo);
      R__insp.Inspect(R__cl, R__parent, "nTracksAtVertex", &sobj->nTracksAtVertex);
      R__insp.Inspect(R__cl, R__parent, "nConst", &sobj->nConst);
      ::ROOT::GenericShowMembers("KDataLV", ( ::KDataLV * )( (::KDataJet*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KDataJet(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataJet : new ::KDataJet;
   }
   static void *newArray_KDataJet(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataJet[nElements] : new ::KDataJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_KDataJet(void *p) {
      delete ((::KDataJet*)p);
   }
   static void deleteArray_KDataJet(void *p) {
      delete [] ((::KDataJet*)p);
   }
   static void destruct_KDataJet(void *p) {
      typedef ::KDataJet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KDataJet

//______________________________________________________________________________
namespace ROOT {
   void KLV_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KLV.
      typedef ::ROOT::Shadow::KLV ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KLV*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "p4", (void*)&sobj->p4);
      ::ROOT::GenericShowMembers("RMLV", (void*)&sobj->p4, R__insp, strcat(R__parent,"p4."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KLV(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KLV : new ::KLV;
   }
   static void *newArray_KLV(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KLV[nElements] : new ::KLV[nElements];
   }
   // Wrapper around operator delete
   static void delete_KLV(void *p) {
      delete ((::KLV*)p);
   }
   static void deleteArray_KLV(void *p) {
      delete [] ((::KLV*)p);
   }
   static void destruct_KLV(void *p) {
      typedef ::KLV current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KLV

//______________________________________________________________________________
namespace ROOT {
   void KDataMET_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KDataMET.
      typedef ::ROOT::Shadow::KDataMET ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KDataMET*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "sumEt", &sobj->sumEt);
      ::ROOT::GenericShowMembers("KDataLV", ( ::KDataLV * )( (::KDataMET*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KDataMET(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataMET : new ::KDataMET;
   }
   static void *newArray_KDataMET(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataMET[nElements] : new ::KDataMET[nElements];
   }
   // Wrapper around operator delete
   static void delete_KDataMET(void *p) {
      delete ((::KDataMET*)p);
   }
   static void deleteArray_KDataMET(void *p) {
      delete [] ((::KDataMET*)p);
   }
   static void destruct_KDataMET(void *p) {
      typedef ::KDataMET current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KDataMET

//______________________________________________________________________________
namespace ROOT {
   void KParton_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KParton.
      typedef ::ROOT::Shadow::KParton ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KParton*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "p4", (void*)&sobj->p4);
      ::ROOT::GenericShowMembers("RMLV", (void*)&sobj->p4, R__insp, strcat(R__parent,"p4."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "pdgid", &sobj->pdgid);
      R__insp.Inspect(R__cl, R__parent, "children", &sobj->children);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KParton(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KParton : new ::KParton;
   }
   static void *newArray_KParton(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KParton[nElements] : new ::KParton[nElements];
   }
   // Wrapper around operator delete
   static void delete_KParton(void *p) {
      delete ((::KParton*)p);
   }
   static void deleteArray_KParton(void *p) {
      delete [] ((::KParton*)p);
   }
   static void destruct_KParton(void *p) {
      typedef ::KParton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KParton

//______________________________________________________________________________
namespace ROOT {
   void KProvenance_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KProvenance.
      typedef ::ROOT::Shadow::KProvenance ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KProvenance*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "names", (void*)&sobj->names);
      ::ROOT::GenericShowMembers("vector<std::string>", (void*)&sobj->names, R__insp, strcat(R__parent,"names."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "branches", (void*)&sobj->branches);
      ::ROOT::GenericShowMembers("vector<std::string>", (void*)&sobj->branches, R__insp, strcat(R__parent,"branches."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KProvenance(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KProvenance : new ::KProvenance;
   }
   static void *newArray_KProvenance(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KProvenance[nElements] : new ::KProvenance[nElements];
   }
   // Wrapper around operator delete
   static void delete_KProvenance(void *p) {
      delete ((::KProvenance*)p);
   }
   static void deleteArray_KProvenance(void *p) {
      delete [] ((::KProvenance*)p);
   }
   static void destruct_KProvenance(void *p) {
      typedef ::KProvenance current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KProvenance

//______________________________________________________________________________
namespace ROOT {
   void KLumiMetadata_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KLumiMetadata.
      typedef ::ROOT::Shadow::KLumiMetadata ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KLumiMetadata*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "nLumi", &sobj->nLumi);
      R__insp.Inspect(R__cl, R__parent, "nRun", &sobj->nRun);
      R__insp.Inspect(R__cl, R__parent, "hltNames", (void*)&sobj->hltNames);
      ::ROOT::GenericShowMembers("vector<std::string>", (void*)&sobj->hltNames, R__insp, strcat(R__parent,"hltNames."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "hltNamesMuons", (void*)&sobj->hltNamesMuons);
      ::ROOT::GenericShowMembers("vector<std::string>", (void*)&sobj->hltNamesMuons, R__insp, strcat(R__parent,"hltNamesMuons."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "discrTau", (void*)&sobj->discrTau);
      ::ROOT::GenericShowMembers("vector<std::string>", (void*)&sobj->discrTau, R__insp, strcat(R__parent,"discrTau."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "discrTauPF", (void*)&sobj->discrTauPF);
      ::ROOT::GenericShowMembers("vector<std::string>", (void*)&sobj->discrTauPF, R__insp, strcat(R__parent,"discrTauPF."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KLumiMetadata(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KLumiMetadata : new ::KLumiMetadata;
   }
   static void *newArray_KLumiMetadata(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KLumiMetadata[nElements] : new ::KLumiMetadata[nElements];
   }
   // Wrapper around operator delete
   static void delete_KLumiMetadata(void *p) {
      delete ((::KLumiMetadata*)p);
   }
   static void deleteArray_KLumiMetadata(void *p) {
      delete [] ((::KLumiMetadata*)p);
   }
   static void destruct_KLumiMetadata(void *p) {
      typedef ::KLumiMetadata current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KLumiMetadata

//______________________________________________________________________________
namespace ROOT {
   void KGenLumiMetadata_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KGenLumiMetadata.
      typedef ::ROOT::Shadow::KGenLumiMetadata ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KGenLumiMetadata*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "xSectionExt", &sobj->xSectionExt);
      R__insp.Inspect(R__cl, R__parent, "xSectionInt", &sobj->xSectionInt);
      ::ROOT::GenericShowMembers("KLumiMetadata", ( ::KLumiMetadata * )( (::KGenLumiMetadata*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KGenLumiMetadata(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KGenLumiMetadata : new ::KGenLumiMetadata;
   }
   static void *newArray_KGenLumiMetadata(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KGenLumiMetadata[nElements] : new ::KGenLumiMetadata[nElements];
   }
   // Wrapper around operator delete
   static void delete_KGenLumiMetadata(void *p) {
      delete ((::KGenLumiMetadata*)p);
   }
   static void deleteArray_KGenLumiMetadata(void *p) {
      delete [] ((::KGenLumiMetadata*)p);
   }
   static void destruct_KGenLumiMetadata(void *p) {
      typedef ::KGenLumiMetadata current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KGenLumiMetadata

//______________________________________________________________________________
namespace ROOT {
   void KEventMetadata_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KEventMetadata.
      typedef ::ROOT::Shadow::KEventMetadata ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KEventMetadata*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "bitsL1", &sobj->bitsL1);
      R__insp.Inspect(R__cl, R__parent, "bitsHLT", &sobj->bitsHLT);
      R__insp.Inspect(R__cl, R__parent, "bitsUserFlags", &sobj->bitsUserFlags);
      R__insp.Inspect(R__cl, R__parent, "nEvent", &sobj->nEvent);
      R__insp.Inspect(R__cl, R__parent, "nLumi", &sobj->nLumi);
      R__insp.Inspect(R__cl, R__parent, "nRun", &sobj->nRun);
      R__insp.Inspect(R__cl, R__parent, "nBX", &sobj->nBX);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KEventMetadata(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KEventMetadata : new ::KEventMetadata;
   }
   static void *newArray_KEventMetadata(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KEventMetadata[nElements] : new ::KEventMetadata[nElements];
   }
   // Wrapper around operator delete
   static void delete_KEventMetadata(void *p) {
      delete ((::KEventMetadata*)p);
   }
   static void deleteArray_KEventMetadata(void *p) {
      delete [] ((::KEventMetadata*)p);
   }
   static void destruct_KEventMetadata(void *p) {
      typedef ::KEventMetadata current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KEventMetadata

//______________________________________________________________________________
namespace ROOT {
   void KGenEventMetadata_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KGenEventMetadata.
      typedef ::ROOT::Shadow::KGenEventMetadata ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KGenEventMetadata*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "weight", &sobj->weight);
      R__insp.Inspect(R__cl, R__parent, "binValue", &sobj->binValue);
      R__insp.Inspect(R__cl, R__parent, "alphaQCD", &sobj->alphaQCD);
      ::ROOT::GenericShowMembers("KEventMetadata", ( ::KEventMetadata * )( (::KGenEventMetadata*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KGenEventMetadata(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KGenEventMetadata : new ::KGenEventMetadata;
   }
   static void *newArray_KGenEventMetadata(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KGenEventMetadata[nElements] : new ::KGenEventMetadata[nElements];
   }
   // Wrapper around operator delete
   static void delete_KGenEventMetadata(void *p) {
      delete ((::KGenEventMetadata*)p);
   }
   static void deleteArray_KGenEventMetadata(void *p) {
      delete [] ((::KGenEventMetadata*)p);
   }
   static void destruct_KGenEventMetadata(void *p) {
      typedef ::KGenEventMetadata current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KGenEventMetadata

//______________________________________________________________________________
namespace ROOT {
   void KDataMuon_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class KDataMuon.
      typedef ::ROOT::Shadow::KDataMuon ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::KDataMuon*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "charge", &sobj->charge);
      R__insp.Inspect(R__cl, R__parent, "track", (void*)&sobj->track);
      ::ROOT::GenericShowMembers("KDataTrack", (void*)&sobj->track, R__insp, strcat(R__parent,"track."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "globalTrack", (void*)&sobj->globalTrack);
      ::ROOT::GenericShowMembers("KDataTrack", (void*)&sobj->globalTrack, R__insp, strcat(R__parent,"globalTrack."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "innerTrack", (void*)&sobj->innerTrack);
      ::ROOT::GenericShowMembers("KDataTrack", (void*)&sobj->innerTrack, R__insp, strcat(R__parent,"innerTrack."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "vertex", (void*)&sobj->vertex);
      ::ROOT::GenericShowMembers("KDataVertex", (void*)&sobj->vertex, R__insp, strcat(R__parent,"vertex."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "type", &sobj->type);
      R__insp.Inspect(R__cl, R__parent, "isTrackerMuon", &sobj->isTrackerMuon);
      R__insp.Inspect(R__cl, R__parent, "isCaloMuon", &sobj->isCaloMuon);
      R__insp.Inspect(R__cl, R__parent, "isStandAloneMuon", &sobj->isStandAloneMuon);
      R__insp.Inspect(R__cl, R__parent, "isGlobalMuon", &sobj->isGlobalMuon);
      R__insp.Inspect(R__cl, R__parent, "hcalIso03", &sobj->hcalIso03);
      R__insp.Inspect(R__cl, R__parent, "ecalIso03", &sobj->ecalIso03);
      R__insp.Inspect(R__cl, R__parent, "trackIso03", &sobj->trackIso03);
      R__insp.Inspect(R__cl, R__parent, "hcalIso05", &sobj->hcalIso05);
      R__insp.Inspect(R__cl, R__parent, "ecalIso05", &sobj->ecalIso05);
      R__insp.Inspect(R__cl, R__parent, "trackIso05", &sobj->trackIso05);
      R__insp.Inspect(R__cl, R__parent, "hcalIso06", &sobj->hcalIso06);
      R__insp.Inspect(R__cl, R__parent, "ecalIso06", &sobj->ecalIso06);
      R__insp.Inspect(R__cl, R__parent, "trackIso06", &sobj->trackIso06);
      R__insp.Inspect(R__cl, R__parent, "isGoodMuon", &sobj->isGoodMuon);
      R__insp.Inspect(R__cl, R__parent, "caloComp", &sobj->caloComp);
      R__insp.Inspect(R__cl, R__parent, "segComp", &sobj->segComp);
      R__insp.Inspect(R__cl, R__parent, "numberOfChambers", &sobj->numberOfChambers);
      R__insp.Inspect(R__cl, R__parent, "trackHits", &sobj->trackHits);
      R__insp.Inspect(R__cl, R__parent, "timeNDof", &sobj->timeNDof);
      R__insp.Inspect(R__cl, R__parent, "timeAtIpInOut", &sobj->timeAtIpInOut);
      R__insp.Inspect(R__cl, R__parent, "timeAtIpInOutErr", &sobj->timeAtIpInOutErr);
      R__insp.Inspect(R__cl, R__parent, "timeAtIpOutIn", &sobj->timeAtIpOutIn);
      R__insp.Inspect(R__cl, R__parent, "timeAtIpOutInErr", &sobj->timeAtIpOutInErr);
      R__insp.Inspect(R__cl, R__parent, "direction", &sobj->direction);
      R__insp.Inspect(R__cl, R__parent, "hltMatch", &sobj->hltMatch);
      ::ROOT::GenericShowMembers("KDataLV", ( ::KDataLV * )( (::KDataMuon*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_KDataMuon(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataMuon : new ::KDataMuon;
   }
   static void *newArray_KDataMuon(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KDataMuon[nElements] : new ::KDataMuon[nElements];
   }
   // Wrapper around operator delete
   static void delete_KDataMuon(void *p) {
      delete ((::KDataMuon*)p);
   }
   static void deleteArray_KDataMuon(void *p) {
      delete [] ((::KDataMuon*)p);
   }
   static void destruct_KDataMuon(void *p) {
      typedef ::KDataMuon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::KDataMuon

namespace ROOT {
   void vectorlEKDataJetgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEKDataJetgR_Dictionary();
   static void *new_vectorlEKDataJetgR(void *p = 0);
   static void *newArray_vectorlEKDataJetgR(Long_t size, void *p);
   static void delete_vectorlEKDataJetgR(void *p);
   static void deleteArray_vectorlEKDataJetgR(void *p);
   static void destruct_vectorlEKDataJetgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<KDataJet>*)
   {
      vector<KDataJet> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<KDataJet>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<KDataJet>", -2, "prec_stl/vector", 49,
                  typeid(vector<KDataJet>), DefineBehavior(ptr, ptr),
                  0, &vectorlEKDataJetgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<KDataJet>) );
      instance.SetNew(&new_vectorlEKDataJetgR);
      instance.SetNewArray(&newArray_vectorlEKDataJetgR);
      instance.SetDelete(&delete_vectorlEKDataJetgR);
      instance.SetDeleteArray(&deleteArray_vectorlEKDataJetgR);
      instance.SetDestructor(&destruct_vectorlEKDataJetgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<KDataJet> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<KDataJet>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEKDataJetgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<KDataJet>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEKDataJetgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KDataJet> : new vector<KDataJet>;
   }
   static void *newArray_vectorlEKDataJetgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KDataJet>[nElements] : new vector<KDataJet>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEKDataJetgR(void *p) {
      delete ((vector<KDataJet>*)p);
   }
   static void deleteArray_vectorlEKDataJetgR(void *p) {
      delete [] ((vector<KDataJet>*)p);
   }
   static void destruct_vectorlEKDataJetgR(void *p) {
      typedef vector<KDataJet> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<KDataJet>

namespace ROOT {
   void vectorlEKDataLVgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEKDataLVgR_Dictionary();
   static void *new_vectorlEKDataLVgR(void *p = 0);
   static void *newArray_vectorlEKDataLVgR(Long_t size, void *p);
   static void delete_vectorlEKDataLVgR(void *p);
   static void deleteArray_vectorlEKDataLVgR(void *p);
   static void destruct_vectorlEKDataLVgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<KDataLV>*)
   {
      vector<KDataLV> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<KDataLV>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<KDataLV>", -2, "prec_stl/vector", 49,
                  typeid(vector<KDataLV>), DefineBehavior(ptr, ptr),
                  0, &vectorlEKDataLVgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<KDataLV>) );
      instance.SetNew(&new_vectorlEKDataLVgR);
      instance.SetNewArray(&newArray_vectorlEKDataLVgR);
      instance.SetDelete(&delete_vectorlEKDataLVgR);
      instance.SetDeleteArray(&deleteArray_vectorlEKDataLVgR);
      instance.SetDestructor(&destruct_vectorlEKDataLVgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<KDataLV> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<KDataLV>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEKDataLVgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<KDataLV>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEKDataLVgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KDataLV> : new vector<KDataLV>;
   }
   static void *newArray_vectorlEKDataLVgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KDataLV>[nElements] : new vector<KDataLV>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEKDataLVgR(void *p) {
      delete ((vector<KDataLV>*)p);
   }
   static void deleteArray_vectorlEKDataLVgR(void *p) {
      delete [] ((vector<KDataLV>*)p);
   }
   static void destruct_vectorlEKDataLVgR(void *p) {
      typedef vector<KDataLV> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<KDataLV>

namespace ROOT {
   void vectorlEKDataMuongR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEKDataMuongR_Dictionary();
   static void *new_vectorlEKDataMuongR(void *p = 0);
   static void *newArray_vectorlEKDataMuongR(Long_t size, void *p);
   static void delete_vectorlEKDataMuongR(void *p);
   static void deleteArray_vectorlEKDataMuongR(void *p);
   static void destruct_vectorlEKDataMuongR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<KDataMuon>*)
   {
      vector<KDataMuon> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<KDataMuon>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<KDataMuon>", -2, "prec_stl/vector", 49,
                  typeid(vector<KDataMuon>), DefineBehavior(ptr, ptr),
                  0, &vectorlEKDataMuongR_Dictionary, isa_proxy, 4,
                  sizeof(vector<KDataMuon>) );
      instance.SetNew(&new_vectorlEKDataMuongR);
      instance.SetNewArray(&newArray_vectorlEKDataMuongR);
      instance.SetDelete(&delete_vectorlEKDataMuongR);
      instance.SetDeleteArray(&deleteArray_vectorlEKDataMuongR);
      instance.SetDestructor(&destruct_vectorlEKDataMuongR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<KDataMuon> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<KDataMuon>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEKDataMuongR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<KDataMuon>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEKDataMuongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KDataMuon> : new vector<KDataMuon>;
   }
   static void *newArray_vectorlEKDataMuongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KDataMuon>[nElements] : new vector<KDataMuon>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEKDataMuongR(void *p) {
      delete ((vector<KDataMuon>*)p);
   }
   static void deleteArray_vectorlEKDataMuongR(void *p) {
      delete [] ((vector<KDataMuon>*)p);
   }
   static void destruct_vectorlEKDataMuongR(void *p) {
      typedef vector<KDataMuon> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<KDataMuon>

namespace ROOT {
   void vectorlEKDataTrackgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEKDataTrackgR_Dictionary();
   static void *new_vectorlEKDataTrackgR(void *p = 0);
   static void *newArray_vectorlEKDataTrackgR(Long_t size, void *p);
   static void delete_vectorlEKDataTrackgR(void *p);
   static void deleteArray_vectorlEKDataTrackgR(void *p);
   static void destruct_vectorlEKDataTrackgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<KDataTrack>*)
   {
      vector<KDataTrack> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<KDataTrack>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<KDataTrack>", -2, "prec_stl/vector", 49,
                  typeid(vector<KDataTrack>), DefineBehavior(ptr, ptr),
                  0, &vectorlEKDataTrackgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<KDataTrack>) );
      instance.SetNew(&new_vectorlEKDataTrackgR);
      instance.SetNewArray(&newArray_vectorlEKDataTrackgR);
      instance.SetDelete(&delete_vectorlEKDataTrackgR);
      instance.SetDeleteArray(&deleteArray_vectorlEKDataTrackgR);
      instance.SetDestructor(&destruct_vectorlEKDataTrackgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<KDataTrack> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<KDataTrack>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEKDataTrackgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<KDataTrack>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEKDataTrackgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KDataTrack> : new vector<KDataTrack>;
   }
   static void *newArray_vectorlEKDataTrackgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KDataTrack>[nElements] : new vector<KDataTrack>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEKDataTrackgR(void *p) {
      delete ((vector<KDataTrack>*)p);
   }
   static void deleteArray_vectorlEKDataTrackgR(void *p) {
      delete [] ((vector<KDataTrack>*)p);
   }
   static void destruct_vectorlEKDataTrackgR(void *p) {
      typedef vector<KDataTrack> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<KDataTrack>

namespace ROOT {
   void vectorlEKDataVertexgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEKDataVertexgR_Dictionary();
   static void *new_vectorlEKDataVertexgR(void *p = 0);
   static void *newArray_vectorlEKDataVertexgR(Long_t size, void *p);
   static void delete_vectorlEKDataVertexgR(void *p);
   static void deleteArray_vectorlEKDataVertexgR(void *p);
   static void destruct_vectorlEKDataVertexgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<KDataVertex>*)
   {
      vector<KDataVertex> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<KDataVertex>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<KDataVertex>", -2, "prec_stl/vector", 49,
                  typeid(vector<KDataVertex>), DefineBehavior(ptr, ptr),
                  0, &vectorlEKDataVertexgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<KDataVertex>) );
      instance.SetNew(&new_vectorlEKDataVertexgR);
      instance.SetNewArray(&newArray_vectorlEKDataVertexgR);
      instance.SetDelete(&delete_vectorlEKDataVertexgR);
      instance.SetDeleteArray(&deleteArray_vectorlEKDataVertexgR);
      instance.SetDestructor(&destruct_vectorlEKDataVertexgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<KDataVertex> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<KDataVertex>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEKDataVertexgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<KDataVertex>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEKDataVertexgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KDataVertex> : new vector<KDataVertex>;
   }
   static void *newArray_vectorlEKDataVertexgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KDataVertex>[nElements] : new vector<KDataVertex>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEKDataVertexgR(void *p) {
      delete ((vector<KDataVertex>*)p);
   }
   static void deleteArray_vectorlEKDataVertexgR(void *p) {
      delete [] ((vector<KDataVertex>*)p);
   }
   static void destruct_vectorlEKDataVertexgR(void *p) {
      typedef vector<KDataVertex> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<KDataVertex>

namespace ROOT {
   void vectorlEKLVgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEKLVgR_Dictionary();
   static void *new_vectorlEKLVgR(void *p = 0);
   static void *newArray_vectorlEKLVgR(Long_t size, void *p);
   static void delete_vectorlEKLVgR(void *p);
   static void deleteArray_vectorlEKLVgR(void *p);
   static void destruct_vectorlEKLVgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<KLV>*)
   {
      vector<KLV> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<KLV>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<KLV>", -2, "prec_stl/vector", 49,
                  typeid(vector<KLV>), DefineBehavior(ptr, ptr),
                  0, &vectorlEKLVgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<KLV>) );
      instance.SetNew(&new_vectorlEKLVgR);
      instance.SetNewArray(&newArray_vectorlEKLVgR);
      instance.SetDelete(&delete_vectorlEKLVgR);
      instance.SetDeleteArray(&deleteArray_vectorlEKLVgR);
      instance.SetDestructor(&destruct_vectorlEKLVgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<KLV> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<KLV>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEKLVgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<KLV>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEKLVgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KLV> : new vector<KLV>;
   }
   static void *newArray_vectorlEKLVgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KLV>[nElements] : new vector<KLV>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEKLVgR(void *p) {
      delete ((vector<KLV>*)p);
   }
   static void deleteArray_vectorlEKLVgR(void *p) {
      delete [] ((vector<KLV>*)p);
   }
   static void destruct_vectorlEKLVgR(void *p) {
      typedef vector<KLV> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<KLV>

namespace ROOT {
   void vectorlEKPartongR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEKPartongR_Dictionary();
   static void *new_vectorlEKPartongR(void *p = 0);
   static void *newArray_vectorlEKPartongR(Long_t size, void *p);
   static void delete_vectorlEKPartongR(void *p);
   static void deleteArray_vectorlEKPartongR(void *p);
   static void destruct_vectorlEKPartongR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<KParton>*)
   {
      vector<KParton> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<KParton>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<KParton>", -2, "prec_stl/vector", 49,
                  typeid(vector<KParton>), DefineBehavior(ptr, ptr),
                  0, &vectorlEKPartongR_Dictionary, isa_proxy, 4,
                  sizeof(vector<KParton>) );
      instance.SetNew(&new_vectorlEKPartongR);
      instance.SetNewArray(&newArray_vectorlEKPartongR);
      instance.SetDelete(&delete_vectorlEKPartongR);
      instance.SetDeleteArray(&deleteArray_vectorlEKPartongR);
      instance.SetDestructor(&destruct_vectorlEKPartongR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<KParton> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<KParton>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEKPartongR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<KParton>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEKPartongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KParton> : new vector<KParton>;
   }
   static void *newArray_vectorlEKPartongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<KParton>[nElements] : new vector<KParton>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEKPartongR(void *p) {
      delete ((vector<KParton>*)p);
   }
   static void deleteArray_vectorlEKPartongR(void *p) {
      delete [] ((vector<KParton>*)p);
   }
   static void destruct_vectorlEKPartongR(void *p) {
      typedef vector<KParton> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<KParton>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

/********************************************************
* dict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabledict();

extern "C" void G__set_cpp_environmentdict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../src/classes.h");
  G__cpp_reset_tagtabledict();
}
#include <new>
extern "C" int G__cpp_dllrevdict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ROOT::Math::Cartesian3D<float> */
static int G__dict_180_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::Cartesian3D<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::Cartesian3D<float>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::Cartesian3D<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::Cartesian3D<float>;
     } else {
       p = new((void*) gvp) ROOT::Math::Cartesian3D<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::Cartesian3D<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::Cartesian3D<float>(
(ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]), (ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[1])
, (ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::Cartesian3D<float>(
(ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]), (ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[1])
, (ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::Cartesian3D<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::Cartesian3D<float>(*(ROOT::Math::Cartesian3D<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::Cartesian3D<float>(*(ROOT::Math::Cartesian3D<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::Cartesian3D<float>& obj = ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->operator=(*(ROOT::Math::Cartesian3D<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->SetCoordinates((const ROOT::Math::Cartesian3D<float>::Scalar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->GetCoordinates((ROOT::Math::Cartesian3D<float>::Scalar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->SetCoordinates((ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]), (ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[1])
, (ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->GetCoordinates(*(ROOT::Math::Cartesian3D<float>::Scalar*) G__Floatref(&libp->para[0]), *(ROOT::Math::Cartesian3D<float>::Scalar*) G__Floatref(&libp->para[1])
, *(ROOT::Math::Cartesian3D<float>::Scalar*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->Mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->Perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->Rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->SetX((ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->SetY((ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->SetZ((ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->SetXYZ((ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]), (ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[1])
, (ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->Scale((ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->Negate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->operator==(*(ROOT::Math::Cartesian3D<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->operator!=(*(ROOT::Math::Cartesian3D<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->SetR((ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->SetTheta((ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->SetPhi((ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->SetRho((ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_180_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::Cartesian3D<float>*) G__getstructoffset())->SetEta((ROOT::Math::Cartesian3D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::Cartesian3D<float> G__TROOTcLcLMathcLcLCartesian3DlEfloatgR;
static int G__dict_180_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::Cartesian3D<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::Cartesian3D<float>*) (soff+(sizeof(ROOT::Math::Cartesian3D<float>)*i)))->~G__TROOTcLcLMathcLcLCartesian3DlEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::Cartesian3D<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::Cartesian3D<float>*) (soff))->~G__TROOTcLcLMathcLcLCartesian3DlEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> */
static int G__dict_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>;
     } else {
       p = new((void*) gvp) ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(
*(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[0]), *(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[1])
, *(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(
*(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[0]), *(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[1])
, *(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::Cartesian3D<float>& obj = ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Coordinates();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetCoordinates((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetCoordinates((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]), (ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[1])
, (ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->GetCoordinates(*(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[0]), *(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[1])
, *(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->GetCoordinates((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetXYZ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]), (ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[1])
, (ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator==(*(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator!=(*(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetX((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetY((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetZ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetR((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetTheta((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetPhi((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetRho((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetEta((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator*=((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator/=((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* pobj;
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> xobj = ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator*((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         pobj = new ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* pobj;
         const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> xobj = ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator/((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         pobj = new ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->r());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_181_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_181_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(*(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> G__TROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR;
static int G__dict_181_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) (soff+(sizeof(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>)*i)))->~G__TROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) (soff))->~G__TROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_181_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* dest = (ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset();
   *dest = *(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) libp->para[0].ref;
   const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::PtEtaPhiM4D<float> */
static int G__dict_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::PtEtaPhiM4D<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::PtEtaPhiM4D<float>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::PtEtaPhiM4D<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::PtEtaPhiM4D<float>;
     } else {
       p = new((void*) gvp) ROOT::Math::PtEtaPhiM4D<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::PtEtaPhiM4D<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::PtEtaPhiM4D<float>(
(ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]), (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[1])
, (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[2]), (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::PtEtaPhiM4D<float>(
(ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]), (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[1])
, (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[2]), (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::PtEtaPhiM4D<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::PtEtaPhiM4D<float>(*(ROOT::Math::PtEtaPhiM4D<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::PtEtaPhiM4D<float>(*(ROOT::Math::PtEtaPhiM4D<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PtEtaPhiM4D<float>& obj = ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->operator=(*(ROOT::Math::PtEtaPhiM4D<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->SetCoordinates((const ROOT::Math::PtEtaPhiM4D<float>::Scalar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->GetCoordinates((ROOT::Math::PtEtaPhiM4D<float>::Scalar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->SetCoordinates((ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]), (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[1])
, (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[2]), (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->GetCoordinates(*(ROOT::Math::PtEtaPhiM4D<float>::Scalar*) G__Floatref(&libp->para[0]), *(ROOT::Math::PtEtaPhiM4D<float>::Scalar*) G__Floatref(&libp->para[1])
, *(ROOT::Math::PtEtaPhiM4D<float>::Scalar*) G__Floatref(&libp->para[2]), *(ROOT::Math::PtEtaPhiM4D<float>::Scalar*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->M());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Mag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Perp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->P2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->E2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->E());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->T());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->M2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Pt2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Mt2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Mt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Et2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Et());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->SetPt((ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->SetEta((ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->SetPhi((ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->SetM((ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->SetPxPyPzE((ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]), (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[1])
, (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[2]), (ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Negate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->Scale((ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->operator==(*(ROOT::Math::PtEtaPhiM4D<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->operator!=(*(ROOT::Math::PtEtaPhiM4D<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->SetPx((ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->SetPy((ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->SetPz((ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_194_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::PtEtaPhiM4D<float>*) G__getstructoffset())->SetE((ROOT::Math::PtEtaPhiM4D<float>::Scalar) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::PtEtaPhiM4D<float> G__TROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR;
static int G__dict_194_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::PtEtaPhiM4D<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::PtEtaPhiM4D<float>*) (soff+(sizeof(ROOT::Math::PtEtaPhiM4D<float>)*i)))->~G__TROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::PtEtaPhiM4D<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::PtEtaPhiM4D<float>*) (soff))->~G__TROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > */
static int G__dict_195_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >;
     } else {
       p = new((void*) gvp) ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >(
*(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[0]), *(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[1])
, *(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[2]), *(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >(
*(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[0]), *(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[1])
, *(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[2]), *(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::PtEtaPhiM4D<float>& obj = ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Coordinates();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetCoordinates((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetCoordinates((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]), (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[1])
, (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[2]), (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->GetCoordinates(*(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[0]), *(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[1])
, *(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[2]), *(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->GetCoordinates((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetXYZT((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]), (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[1])
, (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[2]), (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetPxPyPzE((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]), (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[1])
, (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[2]), (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->operator==(*(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->operator!=(*(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->E());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->T());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->M2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->M());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->P2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Mt2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Mt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Et2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Et());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* pobj;
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> xobj = ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Vect();
         pobj = new ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->operator*=((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->operator/=((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >* pobj;
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > xobj = ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->operator*(*(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[0]));
         pobj = new ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >* pobj;
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > xobj = ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->operator/(*(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar*) G__Floatref(&libp->para[0]));
         pobj = new ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >* pobj;
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > xobj = ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->operator-();
         pobj = new ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >* pobj;
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > xobj = ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->operator+();
         pobj = new ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Rapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->ColinearRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->isTimelike());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->isLightlike((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->isLightlike());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->isSpacelike());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::BetaVector* pobj;
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::BetaVector xobj = ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->BoostToCM();
         pobj = new ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::BetaVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Beta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->Gamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->e());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->r());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->mag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->mt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->mt2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->mass2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetE((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetEta((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetM((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetPhi((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetPt((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetPx((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetPy((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_195_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset())->SetPz((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_195_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >(*(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > G__TROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR;
static int G__dict_195_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) (soff+(sizeof(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >)*i)))->~G__TROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) (soff))->~G__TROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_195_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >* dest = (ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) G__getstructoffset();
   *dest = *(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*) libp->para[0].ref;
   const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> */
static int G__dict_196_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>;
     } else {
       p = new((void*) gvp) ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(
(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]), (ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[1])
, (ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(
(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]), (ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[1])
, (ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::Cartesian3D<float>* pobj;
         const ROOT::Math::Cartesian3D<float> xobj = ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Coordinates();
         pobj = new ROOT::Math::Cartesian3D<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetCoordinates((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetCoordinates((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]), (ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[1])
, (ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->GetCoordinates(*(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[0]), *(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[1])
, *(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->GetCoordinates((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetXYZ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]), (ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[1])
, (ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator==(*(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator!=(*(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* pobj;
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> xobj = ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->Unit();
         pobj = new ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetX((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetY((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetZ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetR((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetTheta((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetPhi((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetRho((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->SetEta((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator*=((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator/=((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* pobj;
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> xobj = ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator*((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         pobj = new ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* pobj;
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> xobj = ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator-();
         pobj = new ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* pobj;
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> xobj = ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator+();
         pobj = new ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* pobj;
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> xobj = ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->operator/((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar) G__double(libp->para[0]));
         pobj = new ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->r());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_196_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* pobj;
         const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> xobj = ((const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset())->unit();
         pobj = new ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_196_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(*(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> G__TROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR;
static int G__dict_196_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) (soff+(sizeof(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>)*i)))->~G__TROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) (soff))->~G__TROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_196_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>* dest = (ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) G__getstructoffset();
   *dest = *(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*) libp->para[0].ref;
   const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KDataLV */
// automatic default constructor
static int G__dict_211_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KDataLV *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataLV[n];
     } else {
       p = new((void*) gvp) KDataLV[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataLV;
     } else {
       p = new((void*) gvp) KDataLV;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataLV));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_211_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KDataLV* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KDataLV(*(KDataLV*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataLV));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KDataLV G__TKDataLV;
static int G__dict_211_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KDataLV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KDataLV*) (soff+(sizeof(KDataLV)*i)))->~G__TKDataLV();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KDataLV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KDataLV*) (soff))->~G__TKDataLV();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_211_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KDataLV* dest = (KDataLV*) G__getstructoffset();
   *dest = *(KDataLV*) libp->para[0].ref;
   const KDataLV& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<KDataLV,allocator<KDataLV> > */
static int G__dict_213_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataLV& obj = ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->at((vector<KDataLV,allocator<KDataLV> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataLV,allocator<KDataLV> >::iterator* pobj;
         vector<KDataLV,allocator<KDataLV> >::iterator xobj = ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->begin();
         pobj = new vector<KDataLV,allocator<KDataLV> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataLV,allocator<KDataLV> >::iterator* pobj;
         vector<KDataLV,allocator<KDataLV> >::iterator xobj = ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->end();
         pobj = new vector<KDataLV,allocator<KDataLV> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataLV,allocator<KDataLV> >::reverse_iterator* pobj;
         vector<KDataLV,allocator<KDataLV> >::reverse_iterator xobj = ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->rbegin();
         pobj = new vector<KDataLV,allocator<KDataLV> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataLV,allocator<KDataLV> >::reverse_iterator* pobj;
         vector<KDataLV,allocator<KDataLV> >::reverse_iterator xobj = ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->rend();
         pobj = new vector<KDataLV,allocator<KDataLV> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->resize((vector<KDataLV,allocator<KDataLV> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->resize((vector<KDataLV,allocator<KDataLV> >::size_type) G__int(libp->para[0]), *((KDataLV*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataLV& obj = ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->operator[]((vector<KDataLV,allocator<KDataLV> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataLV,allocator<KDataLV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataLV,allocator<KDataLV> >[n];
     } else {
       p = new((void*) gvp) vector<KDataLV,allocator<KDataLV> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataLV,allocator<KDataLV> >;
     } else {
       p = new((void*) gvp) vector<KDataLV,allocator<KDataLV> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataLV,allocator<KDataLV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataLV,allocator<KDataLV> >((vector<KDataLV,allocator<KDataLV> >::size_type) G__int(libp->para[0]), *(KDataLV*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<KDataLV,allocator<KDataLV> >((vector<KDataLV,allocator<KDataLV> >::size_type) G__int(libp->para[0]), *(KDataLV*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataLV,allocator<KDataLV> >((vector<KDataLV,allocator<KDataLV> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<KDataLV,allocator<KDataLV> >((vector<KDataLV,allocator<KDataLV> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataLV,allocator<KDataLV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KDataLV,allocator<KDataLV> >(*(vector<KDataLV,allocator<KDataLV> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<KDataLV,allocator<KDataLV> >(*(vector<KDataLV,allocator<KDataLV> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataLV,allocator<KDataLV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KDataLV,allocator<KDataLV> >(*((vector<KDataLV,allocator<KDataLV> >::const_iterator*) G__int(libp->para[0])), *((vector<KDataLV,allocator<KDataLV> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<KDataLV,allocator<KDataLV> >(*((vector<KDataLV,allocator<KDataLV> >::const_iterator*) G__int(libp->para[0])), *((vector<KDataLV,allocator<KDataLV> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<KDataLV,allocator<KDataLV> >& obj = ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->operator=(*(vector<KDataLV,allocator<KDataLV> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->reserve((vector<KDataLV,allocator<KDataLV> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataLV& obj = ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataLV& obj = ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->push_back(*(KDataLV*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->swap(*(vector<KDataLV,allocator<KDataLV> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataLV,allocator<KDataLV> >::iterator* pobj;
         vector<KDataLV,allocator<KDataLV> >::iterator xobj = ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->insert(*((vector<KDataLV,allocator<KDataLV> >::iterator*) G__int(libp->para[0])), *(KDataLV*) libp->para[1].ref);
         pobj = new vector<KDataLV,allocator<KDataLV> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->insert(*((vector<KDataLV,allocator<KDataLV> >::iterator*) G__int(libp->para[0])), *((vector<KDataLV,allocator<KDataLV> >::const_iterator*) G__int(libp->para[1]))
, *((vector<KDataLV,allocator<KDataLV> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->insert(*((vector<KDataLV,allocator<KDataLV> >::iterator*) G__int(libp->para[0])), (vector<KDataLV,allocator<KDataLV> >::size_type) G__int(libp->para[1])
, *(KDataLV*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->erase(*((vector<KDataLV,allocator<KDataLV> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->erase(*((vector<KDataLV,allocator<KDataLV> >::iterator*) G__int(libp->para[0])), *((vector<KDataLV,allocator<KDataLV> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_213_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataLV,allocator<KDataLV> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<KDataLV,allocator<KDataLV> > G__TvectorlEKDataLVcOallocatorlEKDataLVgRsPgR;
static int G__dict_213_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<KDataLV,allocator<KDataLV> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<KDataLV,allocator<KDataLV> >*) (soff+(sizeof(vector<KDataLV,allocator<KDataLV> >)*i)))->~G__TvectorlEKDataLVcOallocatorlEKDataLVgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<KDataLV,allocator<KDataLV> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<KDataLV,allocator<KDataLV> >*) (soff))->~G__TvectorlEKDataLVcOallocatorlEKDataLVgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KDataVertex */
// automatic default constructor
static int G__dict_216_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KDataVertex *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataVertex[n];
     } else {
       p = new((void*) gvp) KDataVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataVertex;
     } else {
       p = new((void*) gvp) KDataVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_216_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KDataVertex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KDataVertex(*(KDataVertex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KDataVertex G__TKDataVertex;
static int G__dict_216_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KDataVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KDataVertex*) (soff+(sizeof(KDataVertex)*i)))->~G__TKDataVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KDataVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KDataVertex*) (soff))->~G__TKDataVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<double,3> */
static int G__dict_217_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,3>& obj = ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<double,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,3>& obj = ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<double,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,3>& obj = ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<double,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_217_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<3>& obj = ((const ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_217_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<double,3>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<double,3>(*(ROOT::Math::MatRepSym<double,3>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<double,3> G__TROOTcLcLMathcLcLMatRepSymlEdoublecO3gR;
static int G__dict_217_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<double,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<double,3>*) (soff+(sizeof(ROOT::Math::MatRepSym<double,3>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<double,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<double,3>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > */
static int G__dict_219_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<double,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<double,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_219_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR;
static int G__dict_219_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<KDataVertex,allocator<KDataVertex> > */
static int G__dict_226_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataVertex& obj = ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->at((vector<KDataVertex,allocator<KDataVertex> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataVertex,allocator<KDataVertex> >::iterator* pobj;
         vector<KDataVertex,allocator<KDataVertex> >::iterator xobj = ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->begin();
         pobj = new vector<KDataVertex,allocator<KDataVertex> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataVertex,allocator<KDataVertex> >::iterator* pobj;
         vector<KDataVertex,allocator<KDataVertex> >::iterator xobj = ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->end();
         pobj = new vector<KDataVertex,allocator<KDataVertex> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataVertex,allocator<KDataVertex> >::reverse_iterator* pobj;
         vector<KDataVertex,allocator<KDataVertex> >::reverse_iterator xobj = ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->rbegin();
         pobj = new vector<KDataVertex,allocator<KDataVertex> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataVertex,allocator<KDataVertex> >::reverse_iterator* pobj;
         vector<KDataVertex,allocator<KDataVertex> >::reverse_iterator xobj = ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->rend();
         pobj = new vector<KDataVertex,allocator<KDataVertex> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->resize((vector<KDataVertex,allocator<KDataVertex> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->resize((vector<KDataVertex,allocator<KDataVertex> >::size_type) G__int(libp->para[0]), *((KDataVertex*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataVertex& obj = ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->operator[]((vector<KDataVertex,allocator<KDataVertex> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataVertex,allocator<KDataVertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataVertex,allocator<KDataVertex> >[n];
     } else {
       p = new((void*) gvp) vector<KDataVertex,allocator<KDataVertex> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataVertex,allocator<KDataVertex> >;
     } else {
       p = new((void*) gvp) vector<KDataVertex,allocator<KDataVertex> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataVertex,allocator<KDataVertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataVertex,allocator<KDataVertex> >((vector<KDataVertex,allocator<KDataVertex> >::size_type) G__int(libp->para[0]), *(KDataVertex*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<KDataVertex,allocator<KDataVertex> >((vector<KDataVertex,allocator<KDataVertex> >::size_type) G__int(libp->para[0]), *(KDataVertex*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataVertex,allocator<KDataVertex> >((vector<KDataVertex,allocator<KDataVertex> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<KDataVertex,allocator<KDataVertex> >((vector<KDataVertex,allocator<KDataVertex> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataVertex,allocator<KDataVertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KDataVertex,allocator<KDataVertex> >(*(vector<KDataVertex,allocator<KDataVertex> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<KDataVertex,allocator<KDataVertex> >(*(vector<KDataVertex,allocator<KDataVertex> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataVertex,allocator<KDataVertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KDataVertex,allocator<KDataVertex> >(*((vector<KDataVertex,allocator<KDataVertex> >::const_iterator*) G__int(libp->para[0])), *((vector<KDataVertex,allocator<KDataVertex> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<KDataVertex,allocator<KDataVertex> >(*((vector<KDataVertex,allocator<KDataVertex> >::const_iterator*) G__int(libp->para[0])), *((vector<KDataVertex,allocator<KDataVertex> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<KDataVertex,allocator<KDataVertex> >& obj = ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->operator=(*(vector<KDataVertex,allocator<KDataVertex> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->reserve((vector<KDataVertex,allocator<KDataVertex> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataVertex& obj = ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataVertex& obj = ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->push_back(*(KDataVertex*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->swap(*(vector<KDataVertex,allocator<KDataVertex> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataVertex,allocator<KDataVertex> >::iterator* pobj;
         vector<KDataVertex,allocator<KDataVertex> >::iterator xobj = ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->insert(*((vector<KDataVertex,allocator<KDataVertex> >::iterator*) G__int(libp->para[0])), *(KDataVertex*) libp->para[1].ref);
         pobj = new vector<KDataVertex,allocator<KDataVertex> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->insert(*((vector<KDataVertex,allocator<KDataVertex> >::iterator*) G__int(libp->para[0])), *((vector<KDataVertex,allocator<KDataVertex> >::const_iterator*) G__int(libp->para[1]))
, *((vector<KDataVertex,allocator<KDataVertex> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->insert(*((vector<KDataVertex,allocator<KDataVertex> >::iterator*) G__int(libp->para[0])), (vector<KDataVertex,allocator<KDataVertex> >::size_type) G__int(libp->para[1])
, *(KDataVertex*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->erase(*((vector<KDataVertex,allocator<KDataVertex> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->erase(*((vector<KDataVertex,allocator<KDataVertex> >::iterator*) G__int(libp->para[0])), *((vector<KDataVertex,allocator<KDataVertex> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_226_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataVertex,allocator<KDataVertex> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<KDataVertex,allocator<KDataVertex> > G__TvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR;
static int G__dict_226_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<KDataVertex,allocator<KDataVertex> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<KDataVertex,allocator<KDataVertex> >*) (soff+(sizeof(vector<KDataVertex,allocator<KDataVertex> >)*i)))->~G__TvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<KDataVertex,allocator<KDataVertex> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<KDataVertex,allocator<KDataVertex> >*) (soff))->~G__TvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KDataTrack */
static int G__dict_229_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KDataTrack*) G__getstructoffset())->getDxy((KDataVertex*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_229_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((KDataTrack*) G__getstructoffset())->getIP((KDataVertex*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((KDataTrack*) G__getstructoffset())->getIP((KDataVertex*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__dict_229_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KDataTrack *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataTrack[n];
     } else {
       p = new((void*) gvp) KDataTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataTrack;
     } else {
       p = new((void*) gvp) KDataTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_229_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KDataTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KDataTrack(*(KDataTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KDataTrack G__TKDataTrack;
static int G__dict_229_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KDataTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KDataTrack*) (soff+(sizeof(KDataTrack)*i)))->~G__TKDataTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KDataTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KDataTrack*) (soff))->~G__TKDataTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_229_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KDataTrack* dest = (KDataTrack*) G__getstructoffset();
   *dest = *(KDataTrack*) libp->para[0].ref;
   const KDataTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<KDataTrack,allocator<KDataTrack> > */
static int G__dict_231_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataTrack& obj = ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->at((vector<KDataTrack,allocator<KDataTrack> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataTrack,allocator<KDataTrack> >::iterator* pobj;
         vector<KDataTrack,allocator<KDataTrack> >::iterator xobj = ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->begin();
         pobj = new vector<KDataTrack,allocator<KDataTrack> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataTrack,allocator<KDataTrack> >::iterator* pobj;
         vector<KDataTrack,allocator<KDataTrack> >::iterator xobj = ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->end();
         pobj = new vector<KDataTrack,allocator<KDataTrack> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataTrack,allocator<KDataTrack> >::reverse_iterator* pobj;
         vector<KDataTrack,allocator<KDataTrack> >::reverse_iterator xobj = ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->rbegin();
         pobj = new vector<KDataTrack,allocator<KDataTrack> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataTrack,allocator<KDataTrack> >::reverse_iterator* pobj;
         vector<KDataTrack,allocator<KDataTrack> >::reverse_iterator xobj = ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->rend();
         pobj = new vector<KDataTrack,allocator<KDataTrack> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->resize((vector<KDataTrack,allocator<KDataTrack> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->resize((vector<KDataTrack,allocator<KDataTrack> >::size_type) G__int(libp->para[0]), *((KDataTrack*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataTrack& obj = ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->operator[]((vector<KDataTrack,allocator<KDataTrack> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataTrack,allocator<KDataTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataTrack,allocator<KDataTrack> >[n];
     } else {
       p = new((void*) gvp) vector<KDataTrack,allocator<KDataTrack> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataTrack,allocator<KDataTrack> >;
     } else {
       p = new((void*) gvp) vector<KDataTrack,allocator<KDataTrack> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataTrack,allocator<KDataTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataTrack,allocator<KDataTrack> >((vector<KDataTrack,allocator<KDataTrack> >::size_type) G__int(libp->para[0]), *(KDataTrack*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<KDataTrack,allocator<KDataTrack> >((vector<KDataTrack,allocator<KDataTrack> >::size_type) G__int(libp->para[0]), *(KDataTrack*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataTrack,allocator<KDataTrack> >((vector<KDataTrack,allocator<KDataTrack> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<KDataTrack,allocator<KDataTrack> >((vector<KDataTrack,allocator<KDataTrack> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataTrack,allocator<KDataTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KDataTrack,allocator<KDataTrack> >(*(vector<KDataTrack,allocator<KDataTrack> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<KDataTrack,allocator<KDataTrack> >(*(vector<KDataTrack,allocator<KDataTrack> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataTrack,allocator<KDataTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KDataTrack,allocator<KDataTrack> >(*((vector<KDataTrack,allocator<KDataTrack> >::const_iterator*) G__int(libp->para[0])), *((vector<KDataTrack,allocator<KDataTrack> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<KDataTrack,allocator<KDataTrack> >(*((vector<KDataTrack,allocator<KDataTrack> >::const_iterator*) G__int(libp->para[0])), *((vector<KDataTrack,allocator<KDataTrack> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<KDataTrack,allocator<KDataTrack> >& obj = ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->operator=(*(vector<KDataTrack,allocator<KDataTrack> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->reserve((vector<KDataTrack,allocator<KDataTrack> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataTrack& obj = ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataTrack& obj = ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->push_back(*(KDataTrack*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->swap(*(vector<KDataTrack,allocator<KDataTrack> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataTrack,allocator<KDataTrack> >::iterator* pobj;
         vector<KDataTrack,allocator<KDataTrack> >::iterator xobj = ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->insert(*((vector<KDataTrack,allocator<KDataTrack> >::iterator*) G__int(libp->para[0])), *(KDataTrack*) libp->para[1].ref);
         pobj = new vector<KDataTrack,allocator<KDataTrack> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->insert(*((vector<KDataTrack,allocator<KDataTrack> >::iterator*) G__int(libp->para[0])), *((vector<KDataTrack,allocator<KDataTrack> >::const_iterator*) G__int(libp->para[1]))
, *((vector<KDataTrack,allocator<KDataTrack> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->insert(*((vector<KDataTrack,allocator<KDataTrack> >::iterator*) G__int(libp->para[0])), (vector<KDataTrack,allocator<KDataTrack> >::size_type) G__int(libp->para[1])
, *(KDataTrack*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->erase(*((vector<KDataTrack,allocator<KDataTrack> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->erase(*((vector<KDataTrack,allocator<KDataTrack> >::iterator*) G__int(libp->para[0])), *((vector<KDataTrack,allocator<KDataTrack> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_231_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataTrack,allocator<KDataTrack> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<KDataTrack,allocator<KDataTrack> > G__TvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR;
static int G__dict_231_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<KDataTrack,allocator<KDataTrack> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<KDataTrack,allocator<KDataTrack> >*) (soff+(sizeof(vector<KDataTrack,allocator<KDataTrack> >)*i)))->~G__TvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<KDataTrack,allocator<KDataTrack> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<KDataTrack,allocator<KDataTrack> >*) (soff))->~G__TvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KDataJet */
// automatic default constructor
static int G__dict_234_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KDataJet *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataJet[n];
     } else {
       p = new((void*) gvp) KDataJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataJet;
     } else {
       p = new((void*) gvp) KDataJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_234_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KDataJet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KDataJet(*(KDataJet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KDataJet G__TKDataJet;
static int G__dict_234_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KDataJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KDataJet*) (soff+(sizeof(KDataJet)*i)))->~G__TKDataJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KDataJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KDataJet*) (soff))->~G__TKDataJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_234_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KDataJet* dest = (KDataJet*) G__getstructoffset();
   *dest = *(KDataJet*) libp->para[0].ref;
   const KDataJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<KDataJet,allocator<KDataJet> > */
static int G__dict_236_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataJet& obj = ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->at((vector<KDataJet,allocator<KDataJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataJet,allocator<KDataJet> >::iterator* pobj;
         vector<KDataJet,allocator<KDataJet> >::iterator xobj = ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->begin();
         pobj = new vector<KDataJet,allocator<KDataJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataJet,allocator<KDataJet> >::iterator* pobj;
         vector<KDataJet,allocator<KDataJet> >::iterator xobj = ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->end();
         pobj = new vector<KDataJet,allocator<KDataJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataJet,allocator<KDataJet> >::reverse_iterator* pobj;
         vector<KDataJet,allocator<KDataJet> >::reverse_iterator xobj = ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->rbegin();
         pobj = new vector<KDataJet,allocator<KDataJet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataJet,allocator<KDataJet> >::reverse_iterator* pobj;
         vector<KDataJet,allocator<KDataJet> >::reverse_iterator xobj = ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->rend();
         pobj = new vector<KDataJet,allocator<KDataJet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->resize((vector<KDataJet,allocator<KDataJet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->resize((vector<KDataJet,allocator<KDataJet> >::size_type) G__int(libp->para[0]), *((KDataJet*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataJet& obj = ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->operator[]((vector<KDataJet,allocator<KDataJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataJet,allocator<KDataJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataJet,allocator<KDataJet> >[n];
     } else {
       p = new((void*) gvp) vector<KDataJet,allocator<KDataJet> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataJet,allocator<KDataJet> >;
     } else {
       p = new((void*) gvp) vector<KDataJet,allocator<KDataJet> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataJet,allocator<KDataJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataJet,allocator<KDataJet> >((vector<KDataJet,allocator<KDataJet> >::size_type) G__int(libp->para[0]), *(KDataJet*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<KDataJet,allocator<KDataJet> >((vector<KDataJet,allocator<KDataJet> >::size_type) G__int(libp->para[0]), *(KDataJet*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataJet,allocator<KDataJet> >((vector<KDataJet,allocator<KDataJet> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<KDataJet,allocator<KDataJet> >((vector<KDataJet,allocator<KDataJet> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataJet,allocator<KDataJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KDataJet,allocator<KDataJet> >(*(vector<KDataJet,allocator<KDataJet> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<KDataJet,allocator<KDataJet> >(*(vector<KDataJet,allocator<KDataJet> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataJet,allocator<KDataJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KDataJet,allocator<KDataJet> >(*((vector<KDataJet,allocator<KDataJet> >::const_iterator*) G__int(libp->para[0])), *((vector<KDataJet,allocator<KDataJet> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<KDataJet,allocator<KDataJet> >(*((vector<KDataJet,allocator<KDataJet> >::const_iterator*) G__int(libp->para[0])), *((vector<KDataJet,allocator<KDataJet> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<KDataJet,allocator<KDataJet> >& obj = ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->operator=(*(vector<KDataJet,allocator<KDataJet> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->reserve((vector<KDataJet,allocator<KDataJet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataJet& obj = ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataJet& obj = ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->push_back(*(KDataJet*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->swap(*(vector<KDataJet,allocator<KDataJet> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataJet,allocator<KDataJet> >::iterator* pobj;
         vector<KDataJet,allocator<KDataJet> >::iterator xobj = ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->insert(*((vector<KDataJet,allocator<KDataJet> >::iterator*) G__int(libp->para[0])), *(KDataJet*) libp->para[1].ref);
         pobj = new vector<KDataJet,allocator<KDataJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->insert(*((vector<KDataJet,allocator<KDataJet> >::iterator*) G__int(libp->para[0])), *((vector<KDataJet,allocator<KDataJet> >::const_iterator*) G__int(libp->para[1]))
, *((vector<KDataJet,allocator<KDataJet> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->insert(*((vector<KDataJet,allocator<KDataJet> >::iterator*) G__int(libp->para[0])), (vector<KDataJet,allocator<KDataJet> >::size_type) G__int(libp->para[1])
, *(KDataJet*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->erase(*((vector<KDataJet,allocator<KDataJet> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->erase(*((vector<KDataJet,allocator<KDataJet> >::iterator*) G__int(libp->para[0])), *((vector<KDataJet,allocator<KDataJet> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_236_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataJet,allocator<KDataJet> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<KDataJet,allocator<KDataJet> > G__TvectorlEKDataJetcOallocatorlEKDataJetgRsPgR;
static int G__dict_236_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<KDataJet,allocator<KDataJet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<KDataJet,allocator<KDataJet> >*) (soff+(sizeof(vector<KDataJet,allocator<KDataJet> >)*i)))->~G__TvectorlEKDataJetcOallocatorlEKDataJetgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<KDataJet,allocator<KDataJet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<KDataJet,allocator<KDataJet> >*) (soff))->~G__TvectorlEKDataJetcOallocatorlEKDataJetgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KLV */
// automatic default constructor
static int G__dict_244_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KLV *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KLV[n];
     } else {
       p = new((void*) gvp) KLV[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KLV;
     } else {
       p = new((void*) gvp) KLV;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KLV));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_244_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KLV* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KLV(*(KLV*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KLV));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KLV G__TKLV;
static int G__dict_244_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KLV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KLV*) (soff+(sizeof(KLV)*i)))->~G__TKLV();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KLV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KLV*) (soff))->~G__TKLV();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_244_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KLV* dest = (KLV*) G__getstructoffset();
   *dest = *(KLV*) libp->para[0].ref;
   const KLV& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<KLV,allocator<KLV> > */
static int G__dict_246_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KLV& obj = ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->at((vector<KLV,allocator<KLV> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KLV,allocator<KLV> >::iterator* pobj;
         vector<KLV,allocator<KLV> >::iterator xobj = ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->begin();
         pobj = new vector<KLV,allocator<KLV> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KLV,allocator<KLV> >::iterator* pobj;
         vector<KLV,allocator<KLV> >::iterator xobj = ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->end();
         pobj = new vector<KLV,allocator<KLV> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KLV,allocator<KLV> >::reverse_iterator* pobj;
         vector<KLV,allocator<KLV> >::reverse_iterator xobj = ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->rbegin();
         pobj = new vector<KLV,allocator<KLV> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KLV,allocator<KLV> >::reverse_iterator* pobj;
         vector<KLV,allocator<KLV> >::reverse_iterator xobj = ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->rend();
         pobj = new vector<KLV,allocator<KLV> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KLV,allocator<KLV> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KLV,allocator<KLV> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->resize((vector<KLV,allocator<KLV> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->resize((vector<KLV,allocator<KLV> >::size_type) G__int(libp->para[0]), *((KLV*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KLV,allocator<KLV> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<KLV,allocator<KLV> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KLV& obj = ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->operator[]((vector<KLV,allocator<KLV> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KLV,allocator<KLV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KLV,allocator<KLV> >[n];
     } else {
       p = new((void*) gvp) vector<KLV,allocator<KLV> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KLV,allocator<KLV> >;
     } else {
       p = new((void*) gvp) vector<KLV,allocator<KLV> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KLV,allocator<KLV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KLV,allocator<KLV> >((vector<KLV,allocator<KLV> >::size_type) G__int(libp->para[0]), *(KLV*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<KLV,allocator<KLV> >((vector<KLV,allocator<KLV> >::size_type) G__int(libp->para[0]), *(KLV*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KLV,allocator<KLV> >((vector<KLV,allocator<KLV> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<KLV,allocator<KLV> >((vector<KLV,allocator<KLV> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KLV,allocator<KLV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KLV,allocator<KLV> >(*(vector<KLV,allocator<KLV> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<KLV,allocator<KLV> >(*(vector<KLV,allocator<KLV> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KLV,allocator<KLV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KLV,allocator<KLV> >(*((vector<KLV,allocator<KLV> >::const_iterator*) G__int(libp->para[0])), *((vector<KLV,allocator<KLV> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<KLV,allocator<KLV> >(*((vector<KLV,allocator<KLV> >::const_iterator*) G__int(libp->para[0])), *((vector<KLV,allocator<KLV> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<KLV,allocator<KLV> >& obj = ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->operator=(*(vector<KLV,allocator<KLV> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->reserve((vector<KLV,allocator<KLV> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KLV& obj = ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KLV& obj = ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->push_back(*(KLV*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->swap(*(vector<KLV,allocator<KLV> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KLV,allocator<KLV> >::iterator* pobj;
         vector<KLV,allocator<KLV> >::iterator xobj = ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->insert(*((vector<KLV,allocator<KLV> >::iterator*) G__int(libp->para[0])), *(KLV*) libp->para[1].ref);
         pobj = new vector<KLV,allocator<KLV> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->insert(*((vector<KLV,allocator<KLV> >::iterator*) G__int(libp->para[0])), *((vector<KLV,allocator<KLV> >::const_iterator*) G__int(libp->para[1]))
, *((vector<KLV,allocator<KLV> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->insert(*((vector<KLV,allocator<KLV> >::iterator*) G__int(libp->para[0])), (vector<KLV,allocator<KLV> >::size_type) G__int(libp->para[1])
, *(KLV*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->erase(*((vector<KLV,allocator<KLV> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->erase(*((vector<KLV,allocator<KLV> >::iterator*) G__int(libp->para[0])), *((vector<KLV,allocator<KLV> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_246_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KLV,allocator<KLV> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<KLV,allocator<KLV> > G__TvectorlEKLVcOallocatorlEKLVgRsPgR;
static int G__dict_246_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<KLV,allocator<KLV> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<KLV,allocator<KLV> >*) (soff+(sizeof(vector<KLV,allocator<KLV> >)*i)))->~G__TvectorlEKLVcOallocatorlEKLVgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<KLV,allocator<KLV> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<KLV,allocator<KLV> >*) (soff))->~G__TvectorlEKLVcOallocatorlEKLVgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KDataMET */
// automatic default constructor
static int G__dict_249_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KDataMET *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataMET[n];
     } else {
       p = new((void*) gvp) KDataMET[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataMET;
     } else {
       p = new((void*) gvp) KDataMET;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataMET));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_249_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KDataMET* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KDataMET(*(KDataMET*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataMET));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KDataMET G__TKDataMET;
static int G__dict_249_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KDataMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KDataMET*) (soff+(sizeof(KDataMET)*i)))->~G__TKDataMET();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KDataMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KDataMET*) (soff))->~G__TKDataMET();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_249_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KDataMET* dest = (KDataMET*) G__getstructoffset();
   *dest = *(KDataMET*) libp->para[0].ref;
   const KDataMET& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KParton */
// automatic default constructor
static int G__dict_251_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KParton *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KParton[n];
     } else {
       p = new((void*) gvp) KParton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KParton;
     } else {
       p = new((void*) gvp) KParton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KParton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_251_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KParton* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KParton(*(KParton*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KParton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KParton G__TKParton;
static int G__dict_251_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KParton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KParton*) (soff+(sizeof(KParton)*i)))->~G__TKParton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KParton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KParton*) (soff))->~G__TKParton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_251_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KParton* dest = (KParton*) G__getstructoffset();
   *dest = *(KParton*) libp->para[0].ref;
   const KParton& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<KParton,allocator<KParton> > */
static int G__dict_253_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KParton& obj = ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->at((vector<KParton,allocator<KParton> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KParton,allocator<KParton> >::iterator* pobj;
         vector<KParton,allocator<KParton> >::iterator xobj = ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->begin();
         pobj = new vector<KParton,allocator<KParton> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KParton,allocator<KParton> >::iterator* pobj;
         vector<KParton,allocator<KParton> >::iterator xobj = ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->end();
         pobj = new vector<KParton,allocator<KParton> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KParton,allocator<KParton> >::reverse_iterator* pobj;
         vector<KParton,allocator<KParton> >::reverse_iterator xobj = ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->rbegin();
         pobj = new vector<KParton,allocator<KParton> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KParton,allocator<KParton> >::reverse_iterator* pobj;
         vector<KParton,allocator<KParton> >::reverse_iterator xobj = ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->rend();
         pobj = new vector<KParton,allocator<KParton> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KParton,allocator<KParton> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KParton,allocator<KParton> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->resize((vector<KParton,allocator<KParton> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->resize((vector<KParton,allocator<KParton> >::size_type) G__int(libp->para[0]), *((KParton*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KParton,allocator<KParton> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<KParton,allocator<KParton> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KParton& obj = ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->operator[]((vector<KParton,allocator<KParton> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KParton,allocator<KParton> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KParton,allocator<KParton> >[n];
     } else {
       p = new((void*) gvp) vector<KParton,allocator<KParton> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KParton,allocator<KParton> >;
     } else {
       p = new((void*) gvp) vector<KParton,allocator<KParton> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KParton,allocator<KParton> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KParton,allocator<KParton> >((vector<KParton,allocator<KParton> >::size_type) G__int(libp->para[0]), *(KParton*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<KParton,allocator<KParton> >((vector<KParton,allocator<KParton> >::size_type) G__int(libp->para[0]), *(KParton*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KParton,allocator<KParton> >((vector<KParton,allocator<KParton> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<KParton,allocator<KParton> >((vector<KParton,allocator<KParton> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KParton,allocator<KParton> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KParton,allocator<KParton> >(*(vector<KParton,allocator<KParton> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<KParton,allocator<KParton> >(*(vector<KParton,allocator<KParton> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KParton,allocator<KParton> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KParton,allocator<KParton> >(*((vector<KParton,allocator<KParton> >::const_iterator*) G__int(libp->para[0])), *((vector<KParton,allocator<KParton> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<KParton,allocator<KParton> >(*((vector<KParton,allocator<KParton> >::const_iterator*) G__int(libp->para[0])), *((vector<KParton,allocator<KParton> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<KParton,allocator<KParton> >& obj = ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->operator=(*(vector<KParton,allocator<KParton> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->reserve((vector<KParton,allocator<KParton> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KParton& obj = ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KParton& obj = ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->push_back(*(KParton*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->swap(*(vector<KParton,allocator<KParton> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KParton,allocator<KParton> >::iterator* pobj;
         vector<KParton,allocator<KParton> >::iterator xobj = ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->insert(*((vector<KParton,allocator<KParton> >::iterator*) G__int(libp->para[0])), *(KParton*) libp->para[1].ref);
         pobj = new vector<KParton,allocator<KParton> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->insert(*((vector<KParton,allocator<KParton> >::iterator*) G__int(libp->para[0])), *((vector<KParton,allocator<KParton> >::const_iterator*) G__int(libp->para[1]))
, *((vector<KParton,allocator<KParton> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->insert(*((vector<KParton,allocator<KParton> >::iterator*) G__int(libp->para[0])), (vector<KParton,allocator<KParton> >::size_type) G__int(libp->para[1])
, *(KParton*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->erase(*((vector<KParton,allocator<KParton> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->erase(*((vector<KParton,allocator<KParton> >::iterator*) G__int(libp->para[0])), *((vector<KParton,allocator<KParton> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_253_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KParton,allocator<KParton> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<KParton,allocator<KParton> > G__TvectorlEKPartoncOallocatorlEKPartongRsPgR;
static int G__dict_253_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<KParton,allocator<KParton> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<KParton,allocator<KParton> >*) (soff+(sizeof(vector<KParton,allocator<KParton> >)*i)))->~G__TvectorlEKPartoncOallocatorlEKPartongRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<KParton,allocator<KParton> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<KParton,allocator<KParton> >*) (soff))->~G__TvectorlEKPartoncOallocatorlEKPartongRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KProvenance */
// automatic default constructor
static int G__dict_491_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KProvenance *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KProvenance[n];
     } else {
       p = new((void*) gvp) KProvenance[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KProvenance;
     } else {
       p = new((void*) gvp) KProvenance;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KProvenance));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_491_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KProvenance* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KProvenance(*(KProvenance*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KProvenance));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KProvenance G__TKProvenance;
static int G__dict_491_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KProvenance*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KProvenance*) (soff+(sizeof(KProvenance)*i)))->~G__TKProvenance();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KProvenance*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KProvenance*) (soff))->~G__TKProvenance();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_491_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KProvenance* dest = (KProvenance*) G__getstructoffset();
   *dest = *(KProvenance*) libp->para[0].ref;
   const KProvenance& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KLumiMetadata */
// automatic default constructor
static int G__dict_496_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KLumiMetadata *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KLumiMetadata[n];
     } else {
       p = new((void*) gvp) KLumiMetadata[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KLumiMetadata;
     } else {
       p = new((void*) gvp) KLumiMetadata;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KLumiMetadata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_496_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KLumiMetadata* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KLumiMetadata(*(KLumiMetadata*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KLumiMetadata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KLumiMetadata G__TKLumiMetadata;
static int G__dict_496_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KLumiMetadata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KLumiMetadata*) (soff+(sizeof(KLumiMetadata)*i)))->~G__TKLumiMetadata();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KLumiMetadata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KLumiMetadata*) (soff))->~G__TKLumiMetadata();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_496_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KLumiMetadata* dest = (KLumiMetadata*) G__getstructoffset();
   *dest = *(KLumiMetadata*) libp->para[0].ref;
   const KLumiMetadata& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KGenLumiMetadata */
// automatic default constructor
static int G__dict_497_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KGenLumiMetadata *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KGenLumiMetadata[n];
     } else {
       p = new((void*) gvp) KGenLumiMetadata[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KGenLumiMetadata;
     } else {
       p = new((void*) gvp) KGenLumiMetadata;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KGenLumiMetadata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_497_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KGenLumiMetadata* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KGenLumiMetadata(*(KGenLumiMetadata*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KGenLumiMetadata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KGenLumiMetadata G__TKGenLumiMetadata;
static int G__dict_497_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KGenLumiMetadata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KGenLumiMetadata*) (soff+(sizeof(KGenLumiMetadata)*i)))->~G__TKGenLumiMetadata();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KGenLumiMetadata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KGenLumiMetadata*) (soff))->~G__TKGenLumiMetadata();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_497_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KGenLumiMetadata* dest = (KGenLumiMetadata*) G__getstructoffset();
   *dest = *(KGenLumiMetadata*) libp->para[0].ref;
   const KGenLumiMetadata& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KEventMetadata */
// automatic default constructor
static int G__dict_498_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KEventMetadata *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KEventMetadata[n];
     } else {
       p = new((void*) gvp) KEventMetadata[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KEventMetadata;
     } else {
       p = new((void*) gvp) KEventMetadata;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KEventMetadata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_498_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KEventMetadata* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KEventMetadata(*(KEventMetadata*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KEventMetadata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KEventMetadata G__TKEventMetadata;
static int G__dict_498_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KEventMetadata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KEventMetadata*) (soff+(sizeof(KEventMetadata)*i)))->~G__TKEventMetadata();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KEventMetadata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KEventMetadata*) (soff))->~G__TKEventMetadata();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_498_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KEventMetadata* dest = (KEventMetadata*) G__getstructoffset();
   *dest = *(KEventMetadata*) libp->para[0].ref;
   const KEventMetadata& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KGenEventMetadata */
// automatic default constructor
static int G__dict_499_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KGenEventMetadata *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KGenEventMetadata[n];
     } else {
       p = new((void*) gvp) KGenEventMetadata[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KGenEventMetadata;
     } else {
       p = new((void*) gvp) KGenEventMetadata;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KGenEventMetadata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_499_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KGenEventMetadata* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KGenEventMetadata(*(KGenEventMetadata*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KGenEventMetadata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KGenEventMetadata G__TKGenEventMetadata;
static int G__dict_499_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KGenEventMetadata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KGenEventMetadata*) (soff+(sizeof(KGenEventMetadata)*i)))->~G__TKGenEventMetadata();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KGenEventMetadata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KGenEventMetadata*) (soff))->~G__TKGenEventMetadata();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_499_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KGenEventMetadata* dest = (KGenEventMetadata*) G__getstructoffset();
   *dest = *(KGenEventMetadata*) libp->para[0].ref;
   const KGenEventMetadata& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KDataMuon */
// automatic default constructor
static int G__dict_500_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KDataMuon *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataMuon[n];
     } else {
       p = new((void*) gvp) KDataMuon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KDataMuon;
     } else {
       p = new((void*) gvp) KDataMuon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_500_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KDataMuon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KDataMuon(*(KDataMuon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_KDataMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KDataMuon G__TKDataMuon;
static int G__dict_500_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KDataMuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KDataMuon*) (soff+(sizeof(KDataMuon)*i)))->~G__TKDataMuon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KDataMuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KDataMuon*) (soff))->~G__TKDataMuon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<KDataMuon,allocator<KDataMuon> > */
static int G__dict_502_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataMuon& obj = ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->at((vector<KDataMuon,allocator<KDataMuon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataMuon,allocator<KDataMuon> >::iterator* pobj;
         vector<KDataMuon,allocator<KDataMuon> >::iterator xobj = ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->begin();
         pobj = new vector<KDataMuon,allocator<KDataMuon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataMuon,allocator<KDataMuon> >::iterator* pobj;
         vector<KDataMuon,allocator<KDataMuon> >::iterator xobj = ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->end();
         pobj = new vector<KDataMuon,allocator<KDataMuon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataMuon,allocator<KDataMuon> >::reverse_iterator* pobj;
         vector<KDataMuon,allocator<KDataMuon> >::reverse_iterator xobj = ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->rbegin();
         pobj = new vector<KDataMuon,allocator<KDataMuon> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataMuon,allocator<KDataMuon> >::reverse_iterator* pobj;
         vector<KDataMuon,allocator<KDataMuon> >::reverse_iterator xobj = ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->rend();
         pobj = new vector<KDataMuon,allocator<KDataMuon> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->resize((vector<KDataMuon,allocator<KDataMuon> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->resize((vector<KDataMuon,allocator<KDataMuon> >::size_type) G__int(libp->para[0]), *((KDataMuon*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataMuon& obj = ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->operator[]((vector<KDataMuon,allocator<KDataMuon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataMuon,allocator<KDataMuon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataMuon,allocator<KDataMuon> >[n];
     } else {
       p = new((void*) gvp) vector<KDataMuon,allocator<KDataMuon> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataMuon,allocator<KDataMuon> >;
     } else {
       p = new((void*) gvp) vector<KDataMuon,allocator<KDataMuon> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataMuon,allocator<KDataMuon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataMuon,allocator<KDataMuon> >((vector<KDataMuon,allocator<KDataMuon> >::size_type) G__int(libp->para[0]), *(KDataMuon*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<KDataMuon,allocator<KDataMuon> >((vector<KDataMuon,allocator<KDataMuon> >::size_type) G__int(libp->para[0]), *(KDataMuon*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<KDataMuon,allocator<KDataMuon> >((vector<KDataMuon,allocator<KDataMuon> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<KDataMuon,allocator<KDataMuon> >((vector<KDataMuon,allocator<KDataMuon> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataMuon,allocator<KDataMuon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KDataMuon,allocator<KDataMuon> >(*(vector<KDataMuon,allocator<KDataMuon> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<KDataMuon,allocator<KDataMuon> >(*(vector<KDataMuon,allocator<KDataMuon> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<KDataMuon,allocator<KDataMuon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<KDataMuon,allocator<KDataMuon> >(*((vector<KDataMuon,allocator<KDataMuon> >::const_iterator*) G__int(libp->para[0])), *((vector<KDataMuon,allocator<KDataMuon> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<KDataMuon,allocator<KDataMuon> >(*((vector<KDataMuon,allocator<KDataMuon> >::const_iterator*) G__int(libp->para[0])), *((vector<KDataMuon,allocator<KDataMuon> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<KDataMuon,allocator<KDataMuon> >& obj = ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->operator=(*(vector<KDataMuon,allocator<KDataMuon> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->reserve((vector<KDataMuon,allocator<KDataMuon> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataMuon& obj = ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KDataMuon& obj = ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->push_back(*(KDataMuon*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->swap(*(vector<KDataMuon,allocator<KDataMuon> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<KDataMuon,allocator<KDataMuon> >::iterator* pobj;
         vector<KDataMuon,allocator<KDataMuon> >::iterator xobj = ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->insert(*((vector<KDataMuon,allocator<KDataMuon> >::iterator*) G__int(libp->para[0])), *(KDataMuon*) libp->para[1].ref);
         pobj = new vector<KDataMuon,allocator<KDataMuon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->insert(*((vector<KDataMuon,allocator<KDataMuon> >::iterator*) G__int(libp->para[0])), *((vector<KDataMuon,allocator<KDataMuon> >::const_iterator*) G__int(libp->para[1]))
, *((vector<KDataMuon,allocator<KDataMuon> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->insert(*((vector<KDataMuon,allocator<KDataMuon> >::iterator*) G__int(libp->para[0])), (vector<KDataMuon,allocator<KDataMuon> >::size_type) G__int(libp->para[1])
, *(KDataMuon*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->erase(*((vector<KDataMuon,allocator<KDataMuon> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->erase(*((vector<KDataMuon,allocator<KDataMuon> >::iterator*) G__int(libp->para[0])), *((vector<KDataMuon,allocator<KDataMuon> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_502_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<KDataMuon,allocator<KDataMuon> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<KDataMuon,allocator<KDataMuon> > G__TvectorlEKDataMuoncOallocatorlEKDataMuongRsPgR;
static int G__dict_502_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<KDataMuon,allocator<KDataMuon> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<KDataMuon,allocator<KDataMuon> >*) (soff+(sizeof(vector<KDataMuon,allocator<KDataMuon> >)*i)))->~G__TvectorlEKDataMuoncOallocatorlEKDataMuongRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<KDataMuon,allocator<KDataMuon> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<KDataMuon,allocator<KDataMuon> >*) (soff))->~G__TvectorlEKDataMuoncOallocatorlEKDataMuongRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ROOT::Math::Cartesian3D<float> */

/* ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> */

/* ROOT::Math::PtEtaPhiM4D<float> */

/* ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > */

/* ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> */

/* KDataLV */

/* vector<KDataLV,allocator<KDataLV> > */

/* KDataVertex */

/* ROOT::Math::MatRepSym<double,3> */

/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > */

/* vector<KDataVertex,allocator<KDataVertex> > */

/* KDataTrack */

/* vector<KDataTrack,allocator<KDataTrack> > */

/* KDataJet */

/* vector<KDataJet,allocator<KDataJet> > */

/* KLV */

/* vector<KLV,allocator<KLV> > */

/* KDataMET */

/* KParton */

/* vector<KParton,allocator<KParton> > */

/* KProvenance */

/* KLumiMetadata */

/* KGenLumiMetadata */

/* KEventMetadata */

/* KGenEventMetadata */

/* KDataMuon */

/* vector<KDataMuon,allocator<KDataMuon> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncdict {
 public:
  G__Sizep2memfuncdict(): p(&G__Sizep2memfuncdict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncdict::*p)();
};

size_t G__get_sizep2memfuncdict()
{
  G__Sizep2memfuncdict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancedict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__dictLN_KDataTrack))) {
     KDataTrack *G__Lderived;
     G__Lderived=(KDataTrack*)0x1000;
     {
       KDataLV *G__Lpbase=(KDataLV*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__dictLN_KDataTrack),G__get_linked_tagnum(&G__dictLN_KDataLV),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__dictLN_KDataJet))) {
     KDataJet *G__Lderived;
     G__Lderived=(KDataJet*)0x1000;
     {
       KDataLV *G__Lpbase=(KDataLV*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__dictLN_KDataJet),G__get_linked_tagnum(&G__dictLN_KDataLV),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__dictLN_KDataMET))) {
     KDataMET *G__Lderived;
     G__Lderived=(KDataMET*)0x1000;
     {
       KDataLV *G__Lpbase=(KDataLV*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__dictLN_KDataMET),G__get_linked_tagnum(&G__dictLN_KDataLV),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__dictLN_KGenLumiMetadata))) {
     KGenLumiMetadata *G__Lderived;
     G__Lderived=(KGenLumiMetadata*)0x1000;
     {
       KLumiMetadata *G__Lpbase=(KLumiMetadata*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__dictLN_KGenLumiMetadata),G__get_linked_tagnum(&G__dictLN_KLumiMetadata),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__dictLN_KGenEventMetadata))) {
     KGenEventMetadata *G__Lderived;
     G__Lderived=(KGenEventMetadata*)0x1000;
     {
       KEventMetadata *G__Lpbase=(KEventMetadata*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__dictLN_KGenEventMetadata),G__get_linked_tagnum(&G__dictLN_KEventMetadata),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__dictLN_KDataMuon))) {
     KDataMuon *G__Lderived;
     G__Lderived=(KDataMuon*)0x1000;
     {
       KDataLV *G__Lpbase=(KDataLV*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__dictLN_KDataMuon),G__get_linked_tagnum(&G__dictLN_KDataLV),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabledict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PositionVector3D<Cartesian3D<double>,DefaultCoordinateSystemTag>",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Scalar",102,-1,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PositionVector3D<Cartesian3D<float>,DefaultCoordinateSystemTag>",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PositionVector3D<CylindricalEta3D<double>,DefaultCoordinateSystemTag>",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindricalEta3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PositionVector3D<CylindricalEta3D<float>,DefaultCoordinateSystemTag>",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindricalEta3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PositionVector3D<Polar3D<double>,DefaultCoordinateSystemTag>",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLPolar3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PositionVector3D<Polar3D<float>,DefaultCoordinateSystemTag>",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLPolar3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PositionVector3D<Cylindrical3D<double>,DefaultCoordinateSystemTag>",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindrical3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PositionVector3D<Cylindrical3D<float>,DefaultCoordinateSystemTag>",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindrical3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Scalar",102,-1,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CoordinateType",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CoordinateSystemTag",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDefaultCoordinateSystemTag),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Scalar",102,-1,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RMDataLV_Store",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Scalar",102,-1,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CoordinateType",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Cartesian3D<Scalar>",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Cartesian3D",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("::ROOT::Math::DisplacementVector3D<Cartesian3D<Scalar> >",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Scalar",102,-1,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CoordinateType",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CoordinateSystemTag",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDefaultCoordinateSystemTag),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("::ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float> >",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DisplacementVector3D<Cartesian3D<Scalar> >",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DisplacementVector3D<ROOT::Math::Cartesian3D<float> >",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BetaVector",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RMDataLV",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RMLV_Store",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RMLV",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float> >",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RMPoint",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KInternalLV",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR),0,G__get_linked_tagnum(&G__dictLN_KDataLV));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KDataLV>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_KDataLV),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_KDataLV),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_KDataLV),256,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_KDataLV),1,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_KDataLV),257,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KDataLVs",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,3*(3+1)/2>",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR),0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KDataVertex>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_KDataVertex),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_KDataVertex),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_KDataVertex),256,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_KDataVertex),1,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_KDataVertex),257,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KDataVertices",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KDataTrack>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_KDataTrack),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_KDataTrack),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_KDataTrack),256,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_KDataTrack),1,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_KDataTrack),257,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KDataTracks",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KDataJet>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_KDataJet),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_KDataJet),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_KDataJet),256,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_KDataJet),1,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_KDataJet),257,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KDataJets",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KDataPFJet>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataPFJetcOallocatorlEKDataPFJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataPFJetcOallocatorlEKDataPFJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataPFJetcOallocatorlEKDataPFJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataPFJetcOallocatorlEKDataPFJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataPFJetcOallocatorlEKDataPFJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KInternalLV",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegRsPgR),0,G__get_linked_tagnum(&G__dictLN_KLV));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KLV>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_KLV),0,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_KLV),0,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_KLV),256,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_KLV),1,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_KLV),257,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKLVcOallocatorlEKLVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKLVcOallocatorlEKLVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKLVcOallocatorlEKLVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKLVcOallocatorlEKLVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KLVs",117,G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KInternalLV",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegRsPgR),0,G__get_linked_tagnum(&G__dictLN_KParton));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KParton>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_KParton),0,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_KParton),0,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_KParton),256,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_KParton),1,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_KParton),257,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KPartons",117,G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KDataMuon>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_KDataMuon),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_KDataMuon),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_KDataMuon),256,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_KDataMuon),1,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_KDataMuon),257,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KDataMuons",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KDataTau>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTaucOallocatorlEKDataTaugRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataTaucOallocatorlEKDataTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTaucOallocatorlEKDataTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataTaucOallocatorlEKDataTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataTaucOallocatorlEKDataTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KDataCaloTau>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataCaloTaucOallocatorlEKDataCaloTaugRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataCaloTaucOallocatorlEKDataCaloTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataCaloTaucOallocatorlEKDataCaloTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataCaloTaucOallocatorlEKDataCaloTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataCaloTaucOallocatorlEKDataCaloTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KDataPFTau>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataPFTaucOallocatorlEKDataPFTaugRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataPFTaucOallocatorlEKDataPFTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataPFTaucOallocatorlEKDataPFTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataPFTaucOallocatorlEKDataPFTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataPFTaucOallocatorlEKDataPFTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<KDataGenTau>",117,G__get_linked_tagnum(&G__dictLN_vectorlEKDataGenTaucOallocatorlEKDataGenTaugRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataGenTaucOallocatorlEKDataGenTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataGenTaucOallocatorlEKDataGenTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataGenTaucOallocatorlEKDataGenTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEKDataGenTaucOallocatorlEKDataGenTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float> >",117,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ROOT::Math::Cartesian3D<float> */
static void G__setup_memvarROOTcLcLMathcLcLCartesian3DlEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR));
   { ROOT::Math::Cartesian3D<float> *p; p=(ROOT::Math::Cartesian3D<float>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fX=",0,"x coordinate");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fY=",0,"y coordinate");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fZ=",0,"z coordinate");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> */
static void G__setup_memvarROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   { ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> *p; p=(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR),-1,-1,4,"fCoordinates=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::PtEtaPhiM4D<float> */
static void G__setup_memvarROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR));
   { ROOT::Math::PtEtaPhiM4D<float> *p; p=(ROOT::Math::PtEtaPhiM4D<float>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fEta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fM=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > */
static void G__setup_memvarROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   { ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > *p; p=(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR),-1,-1,4,"fCoordinates=",0,"internal coordinate system");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> */
static void G__setup_memvarROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   { ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> *p; p=(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR),-1,-1,4,"fCoordinates=",0,"internal coordinate system");
   }
   G__tag_memvar_reset();
}


   /* KDataLV */
static void G__setup_memvarKDataLV(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KDataLV));
   { KDataLV *p; p=(KDataLV*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->p4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR),G__defined_typename("RMDataLV"),-1,1,"p4=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<KDataLV,allocator<KDataLV> > */
static void G__setup_memvarvectorlEKDataLVcOallocatorlEKDataLVgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   { vector<KDataLV,allocator<KDataLV> > *p; p=(vector<KDataLV,allocator<KDataLV> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* KDataVertex */
static void G__setup_memvarKDataVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KDataVertex));
   { KDataVertex *p; p=(KDataVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),G__defined_typename("RMPoint"),-1,1,"position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fake)-(long)(p)),103,0,0,-1,-1,-1,1,"fake=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTracks)-(long)(p)),104,0,0,-1,-1,-1,1,"nTracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chi2)-(long)(p)),102,0,0,-1,-1,-1,1,"chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nDOF)-(long)(p)),102,0,0,-1,-1,-1,1,"nDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->covariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR),-1,-1,1,"covariance=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<double,3> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR));
   { ROOT::Math::MatRepSym<double,3> *p; p=(ROOT::Math::MatRepSym<double,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA),-1,-2,1,"kSize=6",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLRowOffsetslE3gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   { ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > *p; p=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA),-1,-2,1,"kSize=9",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<KDataVertex,allocator<KDataVertex> > */
static void G__setup_memvarvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   { vector<KDataVertex,allocator<KDataVertex> > *p; p=(vector<KDataVertex,allocator<KDataVertex> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* KDataTrack */
static void G__setup_memvarKDataTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KDataTrack));
   { KDataTrack *p; p=(KDataTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ref)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),G__defined_typename("RMPoint"),-1,1,"ref=",0,"reference point (\"vertex\")");
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),99,0,0,-1,-1,-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chi2)-(long)(p)),102,0,0,-1,-1,-1,1,"chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nDOF)-(long)(p)),102,0,0,-1,-1,-1,1,"nDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->errPt)-(long)(p)),102,0,0,-1,-1,-1,1,"errPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->errEta)-(long)(p)),102,0,0,-1,-1,-1,1,"errEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->errPhi)-(long)(p)),102,0,0,-1,-1,-1,1,"errPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->errDxy)-(long)(p)),102,0,0,-1,-1,-1,1,"errDxy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->errDz)-(long)(p)),102,0,0,-1,-1,-1,1,"errDz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nPixelHits)-(long)(p)),105,0,0,-1,-1,-1,1,"nPixelHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nStripHits)-(long)(p)),105,0,0,-1,-1,-1,1,"nStripHits=",0,"dp");
   G__memvar_setup((void*)((long)(&p->quality)-(long)(p)),105,0,0,-1,-1,-1,1,"quality=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<KDataTrack,allocator<KDataTrack> > */
static void G__setup_memvarvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   { vector<KDataTrack,allocator<KDataTrack> > *p; p=(vector<KDataTrack,allocator<KDataTrack> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* KDataJet */
static void G__setup_memvarKDataJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KDataJet));
   { KDataJet *p; p=(KDataJet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->emf)-(long)(p)),100,0,0,-1,-1,-1,1,"emf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->area)-(long)(p)),100,0,0,-1,-1,-1,1,"area=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->n90)-(long)(p)),105,0,0,-1,-1,-1,1,"n90=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->n90Hits)-(long)(p)),105,0,0,-1,-1,-1,1,"n90Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->noiseHCAL)-(long)(p)),100,0,0,-1,-1,-1,1,"noiseHCAL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detectorEta)-(long)(p)),100,0,0,-1,-1,-1,1,"detectorEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHPD)-(long)(p)),100,0,0,-1,-1,-1,1,"fHPD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRBX)-(long)(p)),100,0,0,-1,-1,-1,1,"fRBX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTracksAtCalo)-(long)(p)),105,0,0,-1,-1,-1,1,"nTracksAtCalo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTracksAtVertex)-(long)(p)),105,0,0,-1,-1,-1,1,"nTracksAtVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nConst)-(long)(p)),105,0,0,-1,-1,-1,1,"nConst=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<KDataJet,allocator<KDataJet> > */
static void G__setup_memvarvectorlEKDataJetcOallocatorlEKDataJetgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   { vector<KDataJet,allocator<KDataJet> > *p; p=(vector<KDataJet,allocator<KDataJet> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* KLV */
static void G__setup_memvarKLV(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KLV));
   { KLV *p; p=(KLV*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->p4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegRsPgR),G__defined_typename("RMLV"),-1,1,"p4=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<KLV,allocator<KLV> > */
static void G__setup_memvarvectorlEKLVcOallocatorlEKLVgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   { vector<KLV,allocator<KLV> > *p; p=(vector<KLV,allocator<KLV> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* KDataMET */
static void G__setup_memvarKDataMET(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KDataMET));
   { KDataMET *p; p=(KDataMET*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->sumEt)-(long)(p)),100,0,0,-1,-1,-1,1,"sumEt=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KParton */
static void G__setup_memvarKParton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KParton));
   { KParton *p; p=(KParton*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->p4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegRsPgR),G__defined_typename("RMLV"),-1,1,"p4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdgid)-(long)(p)),104,0,0,-1,-1,-1,1,"pdgid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->children)-(long)(p)),104,0,0,-1,-1,-1,1,"children=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<KParton,allocator<KParton> > */
static void G__setup_memvarvectorlEKPartoncOallocatorlEKPartongRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   { vector<KParton,allocator<KParton> > *p; p=(vector<KParton,allocator<KParton> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* KProvenance */
static void G__setup_memvarKProvenance(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KProvenance));
   { KProvenance *p; p=(KProvenance*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->names)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"names=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->branches)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"branches=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KLumiMetadata */
static void G__setup_memvarKLumiMetadata(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KLumiMetadata));
   { KLumiMetadata *p; p=(KLumiMetadata*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->nLumi)-(long)(p)),107,0,0,-1,-1,-1,1,"nLumi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nRun)-(long)(p)),107,0,0,-1,-1,-1,1,"nRun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hltNames)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"hltNames=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hltNamesMuons)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"hltNamesMuons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discrTau)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"discrTau=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discrTauPF)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"discrTauPF=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KGenLumiMetadata */
static void G__setup_memvarKGenLumiMetadata(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KGenLumiMetadata));
   { KGenLumiMetadata *p; p=(KGenLumiMetadata*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->xSectionExt)-(long)(p)),100,0,0,-1,-1,-1,1,"xSectionExt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xSectionInt)-(long)(p)),100,0,0,-1,-1,-1,1,"xSectionInt=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KEventMetadata */
static void G__setup_memvarKEventMetadata(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KEventMetadata));
   { KEventMetadata *p; p=(KEventMetadata*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->bitsL1)-(long)(p)),109,0,0,-1,-1,-1,1,"bitsL1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bitsHLT)-(long)(p)),109,0,0,-1,-1,-1,1,"bitsHLT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bitsUserFlags)-(long)(p)),107,0,0,-1,-1,-1,1,"bitsUserFlags=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nEvent)-(long)(p)),107,0,0,-1,-1,-1,1,"nEvent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nLumi)-(long)(p)),107,0,0,-1,-1,-1,1,"nLumi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nRun)-(long)(p)),107,0,0,-1,-1,-1,1,"nRun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nBX)-(long)(p)),107,0,0,-1,-1,-1,1,"nBX=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KGenEventMetadata */
static void G__setup_memvarKGenEventMetadata(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KGenEventMetadata));
   { KGenEventMetadata *p; p=(KGenEventMetadata*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->weight)-(long)(p)),100,0,0,-1,-1,-1,1,"weight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->binValue)-(long)(p)),100,0,0,-1,-1,-1,1,"binValue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->alphaQCD)-(long)(p)),100,0,0,-1,-1,-1,1,"alphaQCD=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KDataMuon */
static void G__setup_memvarKDataMuon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_KDataMuon));
   { KDataMuon *p; p=(KDataMuon*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),99,0,0,-1,-1,-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->track)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_KDataTrack),-1,-1,1,"track=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->globalTrack)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_KDataTrack),-1,-1,1,"globalTrack=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->innerTrack)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_KDataTrack),-1,-1,1,"innerTrack=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_KDataVertex),-1,-1,1,"vertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),99,0,0,-1,-1,-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isTrackerMuon)-(long)(p)),103,0,0,-1,-1,-1,1,"isTrackerMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isCaloMuon)-(long)(p)),103,0,0,-1,-1,-1,1,"isCaloMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isStandAloneMuon)-(long)(p)),103,0,0,-1,-1,-1,1,"isStandAloneMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isGlobalMuon)-(long)(p)),103,0,0,-1,-1,-1,1,"isGlobalMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcalIso03)-(long)(p)),102,0,0,-1,-1,-1,1,"hcalIso03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ecalIso03)-(long)(p)),102,0,0,-1,-1,-1,1,"ecalIso03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackIso03)-(long)(p)),102,0,0,-1,-1,-1,1,"trackIso03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcalIso05)-(long)(p)),102,0,0,-1,-1,-1,1,"hcalIso05=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ecalIso05)-(long)(p)),102,0,0,-1,-1,-1,1,"ecalIso05=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackIso05)-(long)(p)),102,0,0,-1,-1,-1,1,"trackIso05=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcalIso06)-(long)(p)),102,0,0,-1,-1,-1,1,"hcalIso06=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ecalIso06)-(long)(p)),102,0,0,-1,-1,-1,1,"ecalIso06=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackIso06)-(long)(p)),102,0,0,-1,-1,-1,1,"trackIso06=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isGoodMuon)-(long)(p)),104,0,0,-1,-1,-1,1,"isGoodMuon=",0,"bitmask");
   G__memvar_setup((void*)((long)(&p->caloComp)-(long)(p)),102,0,0,-1,-1,-1,1,"caloComp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->segComp)-(long)(p)),102,0,0,-1,-1,-1,1,"segComp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numberOfChambers)-(long)(p)),105,0,0,-1,-1,-1,1,"numberOfChambers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackHits)-(long)(p)),105,0,0,-1,-1,-1,1,"trackHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeNDof)-(long)(p)),105,0,0,-1,-1,-1,1,"timeNDof=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeAtIpInOut)-(long)(p)),102,0,0,-1,-1,-1,1,"timeAtIpInOut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeAtIpInOutErr)-(long)(p)),102,0,0,-1,-1,-1,1,"timeAtIpInOutErr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeAtIpOutIn)-(long)(p)),102,0,0,-1,-1,-1,1,"timeAtIpOutIn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeAtIpOutInErr)-(long)(p)),102,0,0,-1,-1,-1,1,"timeAtIpOutInErr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->direction)-(long)(p)),105,0,0,-1,-1,-1,1,"direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hltMatch)-(long)(p)),107,0,0,-1,-1,-1,1,"hltMatch=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<KDataMuon,allocator<KDataMuon> > */
static void G__setup_memvarvectorlEKDataMuoncOallocatorlEKDataMuongRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   { vector<KDataMuon,allocator<KDataMuon> > *p; p=(vector<KDataMuon,allocator<KDataMuon> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvardict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncROOTcLcLMathcLcLCartesian3DlEfloatgR(void) {
   /* ROOT::Math::Cartesian3D<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR));
   G__memfunc_setup("Cartesian3D<float>",1697,G__dict_180_0_1, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR), -1, 0, 0, 5, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cartesian3D<float>",1697,G__dict_180_0_2, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR), -1, 0, 3, 1, 1, 0, 
"f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - xx f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - yy "
"f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cartesian3D<float>",1697,G__dict_180_0_3, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR), -1, 0, 1, 5, 1, 0, "u 'ROOT::Math::Cartesian3D<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_180_0_4, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::Cartesian3D<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoordinates",1447,G__dict_180_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'ROOT::Math::Cartesian3D<float>::Scalar' 10 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoordinates",1435,G__dict_180_0_6, 121, -1, -1, 0, 1, 1, 1, 8, "F - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - dest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoordinates",1447,G__dict_180_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - xx f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - yy "
"f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoordinates",1435,G__dict_180_0_8, 121, -1, -1, 0, 3, 1, 1, 8, 
"f - 'ROOT::Math::Cartesian3D<float>::Scalar' 1 - xx f - 'ROOT::Math::Cartesian3D<float>::Scalar' 1 - yy "
"f - 'ROOT::Math::Cartesian3D<float>::Scalar' 1 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__dict_180_0_9, 102, -1, G__defined_typename("ROOT::Math::Cartesian3D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__dict_180_0_10, 102, -1, G__defined_typename("ROOT::Math::Cartesian3D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__dict_180_0_11, 102, -1, G__defined_typename("ROOT::Math::Cartesian3D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag2",327,G__dict_180_0_12, 102, -1, G__defined_typename("ROOT::Math::Cartesian3D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp2",457,G__dict_180_0_13, 102, -1, G__defined_typename("ROOT::Math::Cartesian3D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rho",297,G__dict_180_0_14, 102, -1, G__defined_typename("ROOT::Math::Cartesian3D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R",82,G__dict_180_0_15, 102, -1, G__defined_typename("ROOT::Math::Cartesian3D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__dict_180_0_16, 102, -1, G__defined_typename("ROOT::Math::Cartesian3D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__dict_180_0_17, 102, -1, G__defined_typename("ROOT::Math::Cartesian3D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__dict_180_0_18, 102, -1, G__defined_typename("ROOT::Math::Cartesian3D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__dict_180_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__dict_180_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - yy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__dict_180_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXYZ",567,G__dict_180_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - xx f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - yy "
"f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Scale",488,G__dict_180_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Negate",596,G__dict_180_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__dict_180_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::Cartesian3D<float>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__dict_180_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::Cartesian3D<float>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__dict_180_0_27, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__dict_180_0_28, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__dict_180_0_29, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetR",382,G__dict_180_0_30, 121, -1, -1, 0, 1, 5, 1, 0, "f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__dict_180_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__dict_180_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRho",597,G__dict_180_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - rho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEta",582,G__dict_180_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::Cartesian3D<float>::Scalar' 0 - eta", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Cartesian3D<float>", 1823, G__dict_180_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void) {
   /* ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   G__memfunc_setup("PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>",8032,G__dict_181_0_1, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 0, 5, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>",8032,G__dict_181_0_2, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 3, 1, 1, 0, 
"f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 11 - a f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 11 - b "
"f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 11 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Coordinates",1147,G__dict_181_0_3, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR), -1, 1, 0, 5, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoordinates",1447,G__dict_181_0_4, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "F - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 10 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoordinates",1447,G__dict_181_0_5, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 3, 1, 1, 0, 
"f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - b "
"f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoordinates",1435,G__dict_181_0_6, 121, -1, -1, 0, 3, 1, 1, 8, 
"f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 1 - a f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 1 - b "
"f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 1 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoordinates",1435,G__dict_181_0_7, 121, -1, -1, 0, 1, 1, 1, 8, "F - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - dest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXYZ",567,G__dict_181_0_8, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 3, 1, 1, 0, 
"f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - b "
"f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__dict_181_0_9, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__dict_181_0_10, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__dict_181_0_11, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__dict_181_0_12, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__dict_181_0_13, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R",82,G__dict_181_0_14, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__dict_181_0_15, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__dict_181_0_16, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__dict_181_0_17, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rho",297,G__dict_181_0_18, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag2",327,G__dict_181_0_19, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp2",457,G__dict_181_0_20, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__dict_181_0_21, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__dict_181_0_22, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - yy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__dict_181_0_23, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetR",382,G__dict_181_0_24, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - rr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__dict_181_0_25, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__dict_181_0_26, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRho",597,G__dict_181_0_27, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - rr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEta",582,G__dict_181_0_28, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - etaval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__dict_181_0_29, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__dict_181_0_30, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__dict_181_0_31, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 1, 1, 1, 8, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/",923,G__dict_181_0_32, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 1, 1, 1, 8, "f - 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__dict_181_0_33, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__dict_181_0_34, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__dict_181_0_35, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("r",114,G__dict_181_0_36, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__dict_181_0_37, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__dict_181_0_38, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__dict_181_0_39, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rho",329,G__dict_181_0_40, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag2",359,G__dict_181_0_41, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp2",489,G__dict_181_0_42, 102, -1, G__defined_typename("ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>", 8032, G__dict_181_0_43, (int) ('i'), 
G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>", 8158, G__dict_181_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_181_0_45, (int) ('u'), G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR(void) {
   /* ROOT::Math::PtEtaPhiM4D<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR));
   G__memfunc_setup("PtEtaPhiM4D<float>",1620,G__dict_194_0_1, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR), -1, 0, 0, 5, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PtEtaPhiM4D<float>",1620,G__dict_194_0_2, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR), -1, 0, 4, 1, 1, 0, 
"f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - pt f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - eta "
"f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - phi f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PtEtaPhiM4D<float>",1620,G__dict_194_0_3, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::PtEtaPhiM4D<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_194_0_4, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::PtEtaPhiM4D<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoordinates",1447,G__dict_194_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 10 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoordinates",1435,G__dict_194_0_6, 121, -1, -1, 0, 1, 1, 1, 8, "F - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - dest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoordinates",1447,G__dict_194_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - pt f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - eta "
"f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - phi f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoordinates",1435,G__dict_194_0_8, 121, -1, -1, 0, 4, 1, 1, 8, 
"f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 1 - pt f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 1 - eta "
"f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 1 - phi f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 1 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pt",196,G__dict_194_0_9, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__dict_194_0_10, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__dict_194_0_11, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("M",77,G__dict_194_0_12, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag",277,G__dict_194_0_13, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp",407,G__dict_194_0_14, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rho",297,G__dict_194_0_15, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Px",200,G__dict_194_0_16, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__dict_194_0_17, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Py",201,G__dict_194_0_18, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__dict_194_0_19, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pz",202,G__dict_194_0_20, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__dict_194_0_21, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P",80,G__dict_194_0_22, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R",82,G__dict_194_0_23, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P2",130,G__dict_194_0_24, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E2",119,G__dict_194_0_25, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E",69,G__dict_194_0_26, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("T",84,G__dict_194_0_27, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("M2",127,G__dict_194_0_28, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag2",327,G__dict_194_0_29, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pt2",246,G__dict_194_0_30, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp2",457,G__dict_194_0_31, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mt2",243,G__dict_194_0_32, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mt",193,G__dict_194_0_33, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Et2",235,G__dict_194_0_34, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Et",185,G__dict_194_0_35, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pi",217,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RestrictPhi",1137,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RestrictNegMass",1534,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__dict_194_0_39, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPt",496,G__dict_194_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEta",582,G__dict_194_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - eta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__dict_194_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetM",377,G__dict_194_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPxPyPzE",972,G__dict_194_0_44, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - px f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - py "
"f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - pz f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Negate",596,G__dict_194_0_45, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Scale",488,G__dict_194_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__dict_194_0_47, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::PtEtaPhiM4D<float>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__dict_194_0_48, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::PtEtaPhiM4D<float>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__dict_194_0_49, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__dict_194_0_50, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__dict_194_0_51, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("t",116,G__dict_194_0_52, 102, -1, G__defined_typename("ROOT::Math::PtEtaPhiM4D<float>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPx",500,G__dict_194_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - px", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPy",501,G__dict_194_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - py", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPz",502,G__dict_194_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE",369,G__dict_194_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'ROOT::Math::PtEtaPhiM4D<float>::Scalar' 0 - energy", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PtEtaPhiM4D<float>", 1746, G__dict_194_0_57, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR(void) {
   /* ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR));
   G__memfunc_setup("LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >",4101,G__dict_195_0_1, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 0, 0, 5, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >",4101,G__dict_195_0_2, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 0, 4, 1, 1, 0, 
"f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 11 - a f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 11 - b "
"f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 11 - c f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 11 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Coordinates",1147,G__dict_195_0_3, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoordinates",1447,G__dict_195_0_4, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "F - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 10 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoordinates",1447,G__dict_195_0_5, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 4, 1, 1, 0, 
"f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - a f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - b "
"f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - c f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoordinates",1435,G__dict_195_0_6, 121, -1, -1, 0, 4, 1, 1, 8, 
"f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 1 - a f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 1 - b "
"f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 1 - c f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 1 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoordinates",1435,G__dict_195_0_7, 121, -1, -1, 0, 1, 1, 1, 8, "F - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - dest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXYZT",651,G__dict_195_0_8, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 4, 1, 1, 0, 
"f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - xx f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - yy "
"f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - zz f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - tt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPxPyPzE",972,G__dict_195_0_9, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 4, 1, 1, 0, 
"f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - xx f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - yy "
"f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - zz f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - ee", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__dict_195_0_10, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__dict_195_0_11, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Px",200,G__dict_195_0_12, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__dict_195_0_13, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Py",201,G__dict_195_0_14, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__dict_195_0_15, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pz",202,G__dict_195_0_16, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__dict_195_0_17, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E",69,G__dict_195_0_18, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("T",84,G__dict_195_0_19, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("M2",127,G__dict_195_0_20, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("M",77,G__dict_195_0_21, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R",82,G__dict_195_0_22, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P",80,G__dict_195_0_23, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P2",130,G__dict_195_0_24, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp2",457,G__dict_195_0_25, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pt",196,G__dict_195_0_26, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rho",297,G__dict_195_0_27, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mt2",243,G__dict_195_0_28, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mt",193,G__dict_195_0_29, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Et2",235,G__dict_195_0_30, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Et",185,G__dict_195_0_31, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__dict_195_0_32, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__dict_195_0_33, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__dict_195_0_34, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vect",402,G__dict_195_0_35, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 0, 5, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__dict_195_0_36, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__dict_195_0_37, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__dict_195_0_38, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 0, 1, 1, 1, 8, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/",923,G__dict_195_0_39, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 0, 1, 1, 1, 8, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__dict_195_0_40, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__dict_195_0_41, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rapidity",838,G__dict_195_0_42, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ColinearRapidity",1651,G__dict_195_0_43, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTimelike",1040,G__dict_195_0_44, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLightlike",1145,G__dict_195_0_45, 103, -1, -1, 0, 1, 1, 1, 8, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 '100*std::numeric_limits<Scalar>::epsilon()' tolerance", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSpacelike",1133,G__dict_195_0_46, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BoostToCM",858,G__dict_195_0_47, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::BetaVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Beta",380,G__dict_195_0_48, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gamma",483,G__dict_195_0_49, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__dict_195_0_50, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__dict_195_0_51, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__dict_195_0_52, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("t",116,G__dict_195_0_53, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__dict_195_0_54, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__dict_195_0_55, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__dict_195_0_56, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__dict_195_0_57, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("r",114,G__dict_195_0_58, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__dict_195_0_59, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__dict_195_0_60, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rho",329,G__dict_195_0_61, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__dict_195_0_62, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__dict_195_0_63, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp2",489,G__dict_195_0_64, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag2",359,G__dict_195_0_65, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag",309,G__dict_195_0_66, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mt",225,G__dict_195_0_67, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mt2",275,G__dict_195_0_68, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__dict_195_0_69, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mass",436,G__dict_195_0_70, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mass2",486,G__dict_195_0_71, 102, -1, G__defined_typename("ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE",369,G__dict_195_0_72, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEta",582,G__dict_195_0_73, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetM",377,G__dict_195_0_74, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__dict_195_0_75, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPt",496,G__dict_195_0_76, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPx",500,G__dict_195_0_77, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPy",501,G__dict_195_0_78, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPz",502,G__dict_195_0_79, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >", 4101, G__dict_195_0_80, (int) ('i'), 
G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >", 4227, G__dict_195_0_81, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_195_0_82, (int) ('u'), G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR(void) {
   /* ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR));
   G__memfunc_setup("DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>",8420,G__dict_196_0_1, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>",8420,G__dict_196_0_2, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 3, 1, 1, 0, 
"f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - b "
"f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Coordinates",1147,G__dict_196_0_3, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoordinates",1447,G__dict_196_0_4, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "F - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 10 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoordinates",1447,G__dict_196_0_5, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 3, 1, 1, 0, 
"f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - b "
"f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoordinates",1435,G__dict_196_0_6, 121, -1, -1, 0, 3, 1, 1, 8, 
"f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 1 - a f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 1 - b "
"f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 1 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoordinates",1435,G__dict_196_0_7, 121, -1, -1, 0, 1, 1, 1, 8, "F - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - dest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXYZ",567,G__dict_196_0_8, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 3, 1, 1, 0, 
"f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - b "
"f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__dict_196_0_9, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__dict_196_0_10, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__dict_196_0_11, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__dict_196_0_12, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__dict_196_0_13, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R",82,G__dict_196_0_14, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__dict_196_0_15, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__dict_196_0_16, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__dict_196_0_17, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rho",297,G__dict_196_0_18, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag2",327,G__dict_196_0_19, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp2",457,G__dict_196_0_20, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__dict_196_0_21, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__dict_196_0_22, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__dict_196_0_23, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - yy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__dict_196_0_24, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetR",382,G__dict_196_0_25, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - rr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__dict_196_0_26, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__dict_196_0_27, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRho",597,G__dict_196_0_28, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - rr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEta",582,G__dict_196_0_29, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - etaval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__dict_196_0_30, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__dict_196_0_31, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__dict_196_0_32, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 1, 1, 1, 8, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__dict_196_0_33, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__dict_196_0_34, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/",923,G__dict_196_0_35, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 1, 1, 1, 8, "f - 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__dict_196_0_36, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__dict_196_0_37, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__dict_196_0_38, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("r",114,G__dict_196_0_39, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__dict_196_0_40, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__dict_196_0_41, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__dict_196_0_42, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rho",329,G__dict_196_0_43, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag2",359,G__dict_196_0_44, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp2",489,G__dict_196_0_45, 102, -1, G__defined_typename("ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unit",448,G__dict_196_0_46, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>", 8420, G__dict_196_0_47, (int) ('i'), 
G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>", 8546, G__dict_196_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_196_0_49, (int) ('u'), G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKDataLV(void) {
   /* KDataLV */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KDataLV));
   // automatic default constructor
   G__memfunc_setup("KDataLV", 615, G__dict_211_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataLV), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KDataLV", 615, G__dict_211_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataLV), -1, 0, 1, 1, 1, 0, "u 'KDataLV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KDataLV", 741, G__dict_211_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_211_0_4, (int) ('u'), G__get_linked_tagnum(&G__dictLN_KDataLV), -1, 1, 1, 1, 1, 0, "u 'KDataLV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEKDataLVcOallocatorlEKDataLVgRsPgR(void) {
   /* vector<KDataLV,allocator<KDataLV> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR));
   G__memfunc_setup("at",213,G__dict_213_0_1, 117, G__get_linked_tagnum(&G__dictLN_KDataLV), -1, 1, 1, 1, 1, 0, "k - 'vector<KDataLV,allocator<KDataLV> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_213_0_2, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_213_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_213_0_4, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiteratorgR), G__defined_typename("vector<KDataLV,allocator<KDataLV> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_213_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiteratorgR), G__defined_typename("vector<KDataLV,allocator<KDataLV> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_213_0_6, 107, -1, G__defined_typename("vector<KDataLV,allocator<KDataLV> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_213_0_7, 107, -1, G__defined_typename("vector<KDataLV,allocator<KDataLV> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_213_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KDataLV,allocator<KDataLV> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_213_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<KDataLV,allocator<KDataLV> >::size_type' 0 - sz u 'KDataLV' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_213_0_10, 107, -1, G__defined_typename("vector<KDataLV,allocator<KDataLV> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_213_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_213_0_12, 117, G__get_linked_tagnum(&G__dictLN_KDataLV), -1, 1, 1, 1, 1, 0, "k - 'vector<KDataLV,allocator<KDataLV> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataLV,allocator<KDataLV> >",3170,G__dict_213_0_13, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataLV,allocator<KDataLV> >",3170,G__dict_213_0_14, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<KDataLV,allocator<KDataLV> >::size_type' 0 - n u 'KDataLV' - 11 'KDataLV()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataLV,allocator<KDataLV> >",3170,G__dict_213_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<KDataLV,allocator<KDataLV> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataLV,allocator<KDataLV> >",3170,G__dict_213_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataLV,allocator<KDataLV> >::iterator' 'vector<KDataLV,allocator<KDataLV> >::const_iterator' 10 - first u 'vector<KDataLV,allocator<KDataLV> >::iterator' 'vector<KDataLV,allocator<KDataLV> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_213_0_17, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<KDataLV,allocator<KDataLV> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_213_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KDataLV,allocator<KDataLV> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_213_0_19, 117, G__get_linked_tagnum(&G__dictLN_KDataLV), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_213_0_20, 117, G__get_linked_tagnum(&G__dictLN_KDataLV), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_213_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KDataLV' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_213_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KDataLV,allocator<KDataLV> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_213_0_23, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataLV,allocator<KDataLV> >::iterator' - 0 - position u 'KDataLV' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_213_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KDataLV,allocator<KDataLV> >::iterator' - 0 - position u 'vector<KDataLV,allocator<KDataLV> >::iterator' 'vector<KDataLV,allocator<KDataLV> >::const_iterator' 10 - first "
"u 'vector<KDataLV,allocator<KDataLV> >::iterator' 'vector<KDataLV,allocator<KDataLV> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_213_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KDataLV,allocator<KDataLV> >::iterator' - 0 - position k - 'vector<KDataLV,allocator<KDataLV> >::size_type' 0 - n "
"u 'KDataLV' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_213_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_213_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KDataLV,allocator<KDataLV> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_213_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataLV,allocator<KDataLV> >::iterator' - 0 - first u 'vector<KDataLV,allocator<KDataLV> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_213_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<KDataLV,allocator<KDataLV> >", 3296, G__dict_213_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKDataVertex(void) {
   /* KDataVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KDataVertex));
   // automatic default constructor
   G__memfunc_setup("KDataVertex", 1091, G__dict_216_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataVertex), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KDataVertex", 1091, G__dict_216_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataVertex), -1, 0, 1, 1, 1, 0, "u 'KDataVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KDataVertex", 1217, G__dict_216_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void) {
   /* ROOT::Math::MatRepSym<double,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR));
   G__memfunc_setup("MatRepSym<double,3>",1750,G__dict_217_0_1, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__dict_217_0_2, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__dict_217_0_3, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_217_0_4, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_217_0_5, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__dict_217_0_6, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__dict_217_0_7, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__dict_217_0_8, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_217_0_9, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__dict_217_0_10, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__dict_217_0_11, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__dict_217_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__dict_217_0_13, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLRowOffsetslE3gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<double,3>", 1750, G__dict_217_0_14, (int) ('i'), G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<double,3>", 1876, G__dict_217_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >",4435,G__dict_219_0_1, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >",4435,G__dict_219_0_2, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >",4435,G__dict_219_0_3, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >",4435,G__dict_219_0_4, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,6>' 'ROOT::Math::SVector<double,3*(3+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >",4435,G__dict_219_0_5, 105, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_219_0_6, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_219_0_7, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__dict_219_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__dict_219_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__dict_219_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_219_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_219_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_219_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_219_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__dict_219_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__dict_219_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__dict_219_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__dict_219_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__dict_219_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__dict_219_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__dict_219_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__dict_219_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__dict_219_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_219_0_24, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_219_0_25, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__dict_219_0_26, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__dict_219_0_27, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__dict_219_0_28, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__dict_219_0_29, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__dict_219_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__dict_219_0_31, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__dict_219_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__dict_219_0_33, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__dict_219_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__dict_219_0_35, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__dict_219_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__dict_219_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__dict_219_0_38, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__dict_219_0_39, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__dict_219_0_40, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__dict_219_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__dict_219_0_42, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), G__defined_typename("ROOT::Math::SVector<double,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__dict_219_0_43, 117, G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), G__defined_typename("ROOT::Math::SVector<double,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__dict_219_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__dict_219_0_45, 117, G__get_linked_tagnum(&G__dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >", 4561, G__dict_219_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR(void) {
   /* vector<KDataVertex,allocator<KDataVertex> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR));
   G__memfunc_setup("at",213,G__dict_226_0_1, 117, G__get_linked_tagnum(&G__dictLN_KDataVertex), -1, 1, 1, 1, 1, 0, "k - 'vector<KDataVertex,allocator<KDataVertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_226_0_2, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_226_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_226_0_4, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiteratorgR), G__defined_typename("vector<KDataVertex,allocator<KDataVertex> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_226_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiteratorgR), G__defined_typename("vector<KDataVertex,allocator<KDataVertex> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_226_0_6, 107, -1, G__defined_typename("vector<KDataVertex,allocator<KDataVertex> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_226_0_7, 107, -1, G__defined_typename("vector<KDataVertex,allocator<KDataVertex> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_226_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KDataVertex,allocator<KDataVertex> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_226_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<KDataVertex,allocator<KDataVertex> >::size_type' 0 - sz u 'KDataVertex' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_226_0_10, 107, -1, G__defined_typename("vector<KDataVertex,allocator<KDataVertex> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_226_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_226_0_12, 117, G__get_linked_tagnum(&G__dictLN_KDataVertex), -1, 1, 1, 1, 1, 0, "k - 'vector<KDataVertex,allocator<KDataVertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataVertex,allocator<KDataVertex> >",4122,G__dict_226_0_13, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataVertex,allocator<KDataVertex> >",4122,G__dict_226_0_14, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<KDataVertex,allocator<KDataVertex> >::size_type' 0 - n u 'KDataVertex' - 11 'KDataVertex()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataVertex,allocator<KDataVertex> >",4122,G__dict_226_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<KDataVertex,allocator<KDataVertex> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataVertex,allocator<KDataVertex> >",4122,G__dict_226_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataVertex,allocator<KDataVertex> >::iterator' 'vector<KDataVertex,allocator<KDataVertex> >::const_iterator' 10 - first u 'vector<KDataVertex,allocator<KDataVertex> >::iterator' 'vector<KDataVertex,allocator<KDataVertex> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_226_0_17, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<KDataVertex,allocator<KDataVertex> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_226_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KDataVertex,allocator<KDataVertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_226_0_19, 117, G__get_linked_tagnum(&G__dictLN_KDataVertex), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_226_0_20, 117, G__get_linked_tagnum(&G__dictLN_KDataVertex), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_226_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KDataVertex' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_226_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KDataVertex,allocator<KDataVertex> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_226_0_23, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataVertex,allocator<KDataVertex> >::iterator' - 0 - position u 'KDataVertex' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_226_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KDataVertex,allocator<KDataVertex> >::iterator' - 0 - position u 'vector<KDataVertex,allocator<KDataVertex> >::iterator' 'vector<KDataVertex,allocator<KDataVertex> >::const_iterator' 10 - first "
"u 'vector<KDataVertex,allocator<KDataVertex> >::iterator' 'vector<KDataVertex,allocator<KDataVertex> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_226_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KDataVertex,allocator<KDataVertex> >::iterator' - 0 - position k - 'vector<KDataVertex,allocator<KDataVertex> >::size_type' 0 - n "
"u 'KDataVertex' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_226_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_226_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KDataVertex,allocator<KDataVertex> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_226_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataVertex,allocator<KDataVertex> >::iterator' - 0 - first u 'vector<KDataVertex,allocator<KDataVertex> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_226_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<KDataVertex,allocator<KDataVertex> >", 4248, G__dict_226_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKDataTrack(void) {
   /* KDataTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KDataTrack));
   G__memfunc_setup("getDxy",629,G__dict_229_0_1, 100, -1, -1, 0, 1, 1, 1, 0, "U 'KDataVertex' - 0 - pv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIP",473,G__dict_229_0_2, 100, -1, -1, 0, 2, 1, 1, 0, 
"U 'KDataVertex' - 0 - pv h - - 0 '0' mode", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("KDataTrack", 954, G__dict_229_0_3, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataTrack), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KDataTrack", 954, G__dict_229_0_4, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataTrack), -1, 0, 1, 1, 1, 0, "u 'KDataTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KDataTrack", 1080, G__dict_229_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_229_0_6, (int) ('u'), G__get_linked_tagnum(&G__dictLN_KDataTrack), -1, 1, 1, 1, 1, 0, "u 'KDataTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR(void) {
   /* vector<KDataTrack,allocator<KDataTrack> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR));
   G__memfunc_setup("at",213,G__dict_231_0_1, 117, G__get_linked_tagnum(&G__dictLN_KDataTrack), -1, 1, 1, 1, 1, 0, "k - 'vector<KDataTrack,allocator<KDataTrack> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_231_0_2, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_231_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_231_0_4, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiteratorgR), G__defined_typename("vector<KDataTrack,allocator<KDataTrack> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_231_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiteratorgR), G__defined_typename("vector<KDataTrack,allocator<KDataTrack> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_231_0_6, 107, -1, G__defined_typename("vector<KDataTrack,allocator<KDataTrack> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_231_0_7, 107, -1, G__defined_typename("vector<KDataTrack,allocator<KDataTrack> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_231_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KDataTrack,allocator<KDataTrack> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_231_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<KDataTrack,allocator<KDataTrack> >::size_type' 0 - sz u 'KDataTrack' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_231_0_10, 107, -1, G__defined_typename("vector<KDataTrack,allocator<KDataTrack> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_231_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_231_0_12, 117, G__get_linked_tagnum(&G__dictLN_KDataTrack), -1, 1, 1, 1, 1, 0, "k - 'vector<KDataTrack,allocator<KDataTrack> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataTrack,allocator<KDataTrack> >",3848,G__dict_231_0_13, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataTrack,allocator<KDataTrack> >",3848,G__dict_231_0_14, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<KDataTrack,allocator<KDataTrack> >::size_type' 0 - n u 'KDataTrack' - 11 'KDataTrack()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataTrack,allocator<KDataTrack> >",3848,G__dict_231_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<KDataTrack,allocator<KDataTrack> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataTrack,allocator<KDataTrack> >",3848,G__dict_231_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataTrack,allocator<KDataTrack> >::iterator' 'vector<KDataTrack,allocator<KDataTrack> >::const_iterator' 10 - first u 'vector<KDataTrack,allocator<KDataTrack> >::iterator' 'vector<KDataTrack,allocator<KDataTrack> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_231_0_17, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<KDataTrack,allocator<KDataTrack> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_231_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KDataTrack,allocator<KDataTrack> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_231_0_19, 117, G__get_linked_tagnum(&G__dictLN_KDataTrack), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_231_0_20, 117, G__get_linked_tagnum(&G__dictLN_KDataTrack), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_231_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KDataTrack' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_231_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KDataTrack,allocator<KDataTrack> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_231_0_23, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataTrack,allocator<KDataTrack> >::iterator' - 0 - position u 'KDataTrack' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_231_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KDataTrack,allocator<KDataTrack> >::iterator' - 0 - position u 'vector<KDataTrack,allocator<KDataTrack> >::iterator' 'vector<KDataTrack,allocator<KDataTrack> >::const_iterator' 10 - first "
"u 'vector<KDataTrack,allocator<KDataTrack> >::iterator' 'vector<KDataTrack,allocator<KDataTrack> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_231_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KDataTrack,allocator<KDataTrack> >::iterator' - 0 - position k - 'vector<KDataTrack,allocator<KDataTrack> >::size_type' 0 - n "
"u 'KDataTrack' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_231_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_231_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KDataTrack,allocator<KDataTrack> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_231_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataTrack,allocator<KDataTrack> >::iterator' - 0 - first u 'vector<KDataTrack,allocator<KDataTrack> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_231_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<KDataTrack,allocator<KDataTrack> >", 3974, G__dict_231_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKDataJet(void) {
   /* KDataJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KDataJet));
   // automatic default constructor
   G__memfunc_setup("KDataJet", 744, G__dict_234_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataJet), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KDataJet", 744, G__dict_234_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataJet), -1, 0, 1, 1, 1, 0, "u 'KDataJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KDataJet", 870, G__dict_234_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_234_0_4, (int) ('u'), G__get_linked_tagnum(&G__dictLN_KDataJet), -1, 1, 1, 1, 1, 0, "u 'KDataJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEKDataJetcOallocatorlEKDataJetgRsPgR(void) {
   /* vector<KDataJet,allocator<KDataJet> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR));
   G__memfunc_setup("at",213,G__dict_236_0_1, 117, G__get_linked_tagnum(&G__dictLN_KDataJet), -1, 1, 1, 1, 1, 0, "k - 'vector<KDataJet,allocator<KDataJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_236_0_2, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_236_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_236_0_4, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<KDataJet,allocator<KDataJet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_236_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<KDataJet,allocator<KDataJet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_236_0_6, 107, -1, G__defined_typename("vector<KDataJet,allocator<KDataJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_236_0_7, 107, -1, G__defined_typename("vector<KDataJet,allocator<KDataJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_236_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KDataJet,allocator<KDataJet> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_236_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<KDataJet,allocator<KDataJet> >::size_type' 0 - sz u 'KDataJet' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_236_0_10, 107, -1, G__defined_typename("vector<KDataJet,allocator<KDataJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_236_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_236_0_12, 117, G__get_linked_tagnum(&G__dictLN_KDataJet), -1, 1, 1, 1, 1, 0, "k - 'vector<KDataJet,allocator<KDataJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataJet,allocator<KDataJet> >",3428,G__dict_236_0_13, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataJet,allocator<KDataJet> >",3428,G__dict_236_0_14, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<KDataJet,allocator<KDataJet> >::size_type' 0 - n u 'KDataJet' - 11 'KDataJet()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataJet,allocator<KDataJet> >",3428,G__dict_236_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<KDataJet,allocator<KDataJet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataJet,allocator<KDataJet> >",3428,G__dict_236_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataJet,allocator<KDataJet> >::iterator' 'vector<KDataJet,allocator<KDataJet> >::const_iterator' 10 - first u 'vector<KDataJet,allocator<KDataJet> >::iterator' 'vector<KDataJet,allocator<KDataJet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_236_0_17, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<KDataJet,allocator<KDataJet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_236_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KDataJet,allocator<KDataJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_236_0_19, 117, G__get_linked_tagnum(&G__dictLN_KDataJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_236_0_20, 117, G__get_linked_tagnum(&G__dictLN_KDataJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_236_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KDataJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_236_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KDataJet,allocator<KDataJet> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_236_0_23, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataJet,allocator<KDataJet> >::iterator' - 0 - position u 'KDataJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_236_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KDataJet,allocator<KDataJet> >::iterator' - 0 - position u 'vector<KDataJet,allocator<KDataJet> >::iterator' 'vector<KDataJet,allocator<KDataJet> >::const_iterator' 10 - first "
"u 'vector<KDataJet,allocator<KDataJet> >::iterator' 'vector<KDataJet,allocator<KDataJet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_236_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KDataJet,allocator<KDataJet> >::iterator' - 0 - position k - 'vector<KDataJet,allocator<KDataJet> >::size_type' 0 - n "
"u 'KDataJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_236_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_236_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KDataJet,allocator<KDataJet> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_236_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataJet,allocator<KDataJet> >::iterator' - 0 - first u 'vector<KDataJet,allocator<KDataJet> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_236_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<KDataJet,allocator<KDataJet> >", 3554, G__dict_236_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKLV(void) {
   /* KLV */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KLV));
   // automatic default constructor
   G__memfunc_setup("KLV", 237, G__dict_244_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KLV), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KLV", 237, G__dict_244_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KLV), -1, 0, 1, 1, 1, 0, "u 'KLV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KLV", 363, G__dict_244_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_244_0_4, (int) ('u'), G__get_linked_tagnum(&G__dictLN_KLV), -1, 1, 1, 1, 1, 0, "u 'KLV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEKLVcOallocatorlEKLVgRsPgR(void) {
   /* vector<KLV,allocator<KLV> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR));
   G__memfunc_setup("at",213,G__dict_246_0_1, 117, G__get_linked_tagnum(&G__dictLN_KLV), -1, 1, 1, 1, 1, 0, "k - 'vector<KLV,allocator<KLV> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_246_0_2, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_246_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_246_0_4, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKLVcOallocatorlEKLVgRsPgRcLcLiteratorgR), G__defined_typename("vector<KLV,allocator<KLV> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_246_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKLVcOallocatorlEKLVgRsPgRcLcLiteratorgR), G__defined_typename("vector<KLV,allocator<KLV> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_246_0_6, 107, -1, G__defined_typename("vector<KLV,allocator<KLV> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_246_0_7, 107, -1, G__defined_typename("vector<KLV,allocator<KLV> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_246_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KLV,allocator<KLV> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_246_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<KLV,allocator<KLV> >::size_type' 0 - sz u 'KLV' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_246_0_10, 107, -1, G__defined_typename("vector<KLV,allocator<KLV> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_246_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_246_0_12, 117, G__get_linked_tagnum(&G__dictLN_KLV), -1, 1, 1, 1, 1, 0, "k - 'vector<KLV,allocator<KLV> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KLV,allocator<KLV> >",2414,G__dict_246_0_13, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KLV,allocator<KLV> >",2414,G__dict_246_0_14, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<KLV,allocator<KLV> >::size_type' 0 - n u 'KLV' - 11 'KLV()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KLV,allocator<KLV> >",2414,G__dict_246_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<KLV,allocator<KLV> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KLV,allocator<KLV> >",2414,G__dict_246_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<KLV,allocator<KLV> >::iterator' 'vector<KLV,allocator<KLV> >::const_iterator' 10 - first u 'vector<KLV,allocator<KLV> >::iterator' 'vector<KLV,allocator<KLV> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_246_0_17, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<KLV,allocator<KLV> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_246_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KLV,allocator<KLV> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_246_0_19, 117, G__get_linked_tagnum(&G__dictLN_KLV), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_246_0_20, 117, G__get_linked_tagnum(&G__dictLN_KLV), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_246_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KLV' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_246_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KLV,allocator<KLV> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_246_0_23, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<KLV,allocator<KLV> >::iterator' - 0 - position u 'KLV' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_246_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KLV,allocator<KLV> >::iterator' - 0 - position u 'vector<KLV,allocator<KLV> >::iterator' 'vector<KLV,allocator<KLV> >::const_iterator' 10 - first "
"u 'vector<KLV,allocator<KLV> >::iterator' 'vector<KLV,allocator<KLV> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_246_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KLV,allocator<KLV> >::iterator' - 0 - position k - 'vector<KLV,allocator<KLV> >::size_type' 0 - n "
"u 'KLV' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_246_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_246_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KLV,allocator<KLV> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_246_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<KLV,allocator<KLV> >::iterator' - 0 - first u 'vector<KLV,allocator<KLV> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_246_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<KLV,allocator<KLV> >", 2540, G__dict_246_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKDataMET(void) {
   /* KDataMET */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KDataMET));
   // automatic default constructor
   G__memfunc_setup("KDataMET", 683, G__dict_249_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataMET), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KDataMET", 683, G__dict_249_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataMET), -1, 0, 1, 1, 1, 0, "u 'KDataMET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KDataMET", 809, G__dict_249_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_249_0_4, (int) ('u'), G__get_linked_tagnum(&G__dictLN_KDataMET), -1, 1, 1, 1, 1, 0, "u 'KDataMET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKParton(void) {
   /* KParton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KParton));
   // automatic default constructor
   G__memfunc_setup("KParton", 703, G__dict_251_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KParton), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KParton", 703, G__dict_251_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KParton), -1, 0, 1, 1, 1, 0, "u 'KParton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KParton", 829, G__dict_251_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_251_0_4, (int) ('u'), G__get_linked_tagnum(&G__dictLN_KParton), -1, 1, 1, 1, 1, 0, "u 'KParton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEKPartoncOallocatorlEKPartongRsPgR(void) {
   /* vector<KParton,allocator<KParton> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR));
   G__memfunc_setup("at",213,G__dict_253_0_1, 117, G__get_linked_tagnum(&G__dictLN_KParton), -1, 1, 1, 1, 1, 0, "k - 'vector<KParton,allocator<KParton> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_253_0_2, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_253_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_253_0_4, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiteratorgR), G__defined_typename("vector<KParton,allocator<KParton> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_253_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiteratorgR), G__defined_typename("vector<KParton,allocator<KParton> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_253_0_6, 107, -1, G__defined_typename("vector<KParton,allocator<KParton> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_253_0_7, 107, -1, G__defined_typename("vector<KParton,allocator<KParton> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_253_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KParton,allocator<KParton> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_253_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<KParton,allocator<KParton> >::size_type' 0 - sz u 'KParton' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_253_0_10, 107, -1, G__defined_typename("vector<KParton,allocator<KParton> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_253_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_253_0_12, 117, G__get_linked_tagnum(&G__dictLN_KParton), -1, 1, 1, 1, 1, 0, "k - 'vector<KParton,allocator<KParton> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KParton,allocator<KParton> >",3346,G__dict_253_0_13, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KParton,allocator<KParton> >",3346,G__dict_253_0_14, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<KParton,allocator<KParton> >::size_type' 0 - n u 'KParton' - 11 'KParton()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KParton,allocator<KParton> >",3346,G__dict_253_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<KParton,allocator<KParton> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KParton,allocator<KParton> >",3346,G__dict_253_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<KParton,allocator<KParton> >::iterator' 'vector<KParton,allocator<KParton> >::const_iterator' 10 - first u 'vector<KParton,allocator<KParton> >::iterator' 'vector<KParton,allocator<KParton> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_253_0_17, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<KParton,allocator<KParton> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_253_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KParton,allocator<KParton> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_253_0_19, 117, G__get_linked_tagnum(&G__dictLN_KParton), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_253_0_20, 117, G__get_linked_tagnum(&G__dictLN_KParton), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_253_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KParton' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_253_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KParton,allocator<KParton> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_253_0_23, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<KParton,allocator<KParton> >::iterator' - 0 - position u 'KParton' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_253_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KParton,allocator<KParton> >::iterator' - 0 - position u 'vector<KParton,allocator<KParton> >::iterator' 'vector<KParton,allocator<KParton> >::const_iterator' 10 - first "
"u 'vector<KParton,allocator<KParton> >::iterator' 'vector<KParton,allocator<KParton> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_253_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KParton,allocator<KParton> >::iterator' - 0 - position k - 'vector<KParton,allocator<KParton> >::size_type' 0 - n "
"u 'KParton' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_253_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_253_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KParton,allocator<KParton> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_253_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<KParton,allocator<KParton> >::iterator' - 0 - first u 'vector<KParton,allocator<KParton> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_253_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<KParton,allocator<KParton> >", 3472, G__dict_253_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKProvenance(void) {
   /* KProvenance */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KProvenance));
   // automatic default constructor
   G__memfunc_setup("KProvenance", 1116, G__dict_491_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KProvenance), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KProvenance", 1116, G__dict_491_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KProvenance), -1, 0, 1, 1, 1, 0, "u 'KProvenance' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KProvenance", 1242, G__dict_491_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_491_0_4, (int) ('u'), G__get_linked_tagnum(&G__dictLN_KProvenance), -1, 1, 1, 1, 1, 0, "u 'KProvenance' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKLumiMetadata(void) {
   /* KLumiMetadata */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KLumiMetadata));
   // automatic default constructor
   G__memfunc_setup("KLumiMetadata", 1283, G__dict_496_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KLumiMetadata), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KLumiMetadata", 1283, G__dict_496_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KLumiMetadata), -1, 0, 1, 1, 1, 0, "u 'KLumiMetadata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KLumiMetadata", 1409, G__dict_496_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_496_0_4, (int) ('u'), G__get_linked_tagnum(&G__dictLN_KLumiMetadata), -1, 1, 1, 1, 1, 0, "u 'KLumiMetadata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKGenLumiMetadata(void) {
   /* KGenLumiMetadata */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KGenLumiMetadata));
   // automatic default constructor
   G__memfunc_setup("KGenLumiMetadata", 1565, G__dict_497_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KGenLumiMetadata), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KGenLumiMetadata", 1565, G__dict_497_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KGenLumiMetadata), -1, 0, 1, 1, 1, 0, "u 'KGenLumiMetadata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KGenLumiMetadata", 1691, G__dict_497_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_497_0_4, (int) ('u'), G__get_linked_tagnum(&G__dictLN_KGenLumiMetadata), -1, 1, 1, 1, 1, 0, "u 'KGenLumiMetadata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKEventMetadata(void) {
   /* KEventMetadata */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KEventMetadata));
   // automatic default constructor
   G__memfunc_setup("KEventMetadata", 1390, G__dict_498_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KEventMetadata), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KEventMetadata", 1390, G__dict_498_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KEventMetadata), -1, 0, 1, 1, 1, 0, "u 'KEventMetadata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KEventMetadata", 1516, G__dict_498_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_498_0_4, (int) ('u'), G__get_linked_tagnum(&G__dictLN_KEventMetadata), -1, 1, 1, 1, 1, 0, "u 'KEventMetadata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKGenEventMetadata(void) {
   /* KGenEventMetadata */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KGenEventMetadata));
   // automatic default constructor
   G__memfunc_setup("KGenEventMetadata", 1672, G__dict_499_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KGenEventMetadata), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KGenEventMetadata", 1672, G__dict_499_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KGenEventMetadata), -1, 0, 1, 1, 1, 0, "u 'KGenEventMetadata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KGenEventMetadata", 1798, G__dict_499_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_499_0_4, (int) ('u'), G__get_linked_tagnum(&G__dictLN_KGenEventMetadata), -1, 1, 1, 1, 1, 0, "u 'KGenEventMetadata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKDataMuon(void) {
   /* KDataMuon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_KDataMuon));
   // automatic default constructor
   G__memfunc_setup("KDataMuon", 868, G__dict_500_0_1, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataMuon), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KDataMuon", 868, G__dict_500_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictLN_KDataMuon), -1, 0, 1, 1, 1, 0, "u 'KDataMuon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KDataMuon", 994, G__dict_500_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEKDataMuoncOallocatorlEKDataMuongRsPgR(void) {
   /* vector<KDataMuon,allocator<KDataMuon> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR));
   G__memfunc_setup("at",213,G__dict_502_0_1, 117, G__get_linked_tagnum(&G__dictLN_KDataMuon), -1, 1, 1, 1, 1, 0, "k - 'vector<KDataMuon,allocator<KDataMuon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_502_0_2, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_502_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_502_0_4, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiteratorgR), G__defined_typename("vector<KDataMuon,allocator<KDataMuon> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_502_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiteratorgR), G__defined_typename("vector<KDataMuon,allocator<KDataMuon> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_502_0_6, 107, -1, G__defined_typename("vector<KDataMuon,allocator<KDataMuon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_502_0_7, 107, -1, G__defined_typename("vector<KDataMuon,allocator<KDataMuon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_502_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KDataMuon,allocator<KDataMuon> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_502_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<KDataMuon,allocator<KDataMuon> >::size_type' 0 - sz u 'KDataMuon' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_502_0_10, 107, -1, G__defined_typename("vector<KDataMuon,allocator<KDataMuon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_502_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_502_0_12, 117, G__get_linked_tagnum(&G__dictLN_KDataMuon), -1, 1, 1, 1, 1, 0, "k - 'vector<KDataMuon,allocator<KDataMuon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataMuon,allocator<KDataMuon> >",3676,G__dict_502_0_13, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataMuon,allocator<KDataMuon> >",3676,G__dict_502_0_14, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<KDataMuon,allocator<KDataMuon> >::size_type' 0 - n u 'KDataMuon' - 11 'KDataMuon()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataMuon,allocator<KDataMuon> >",3676,G__dict_502_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<KDataMuon,allocator<KDataMuon> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<KDataMuon,allocator<KDataMuon> >",3676,G__dict_502_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataMuon,allocator<KDataMuon> >::iterator' 'vector<KDataMuon,allocator<KDataMuon> >::const_iterator' 10 - first u 'vector<KDataMuon,allocator<KDataMuon> >::iterator' 'vector<KDataMuon,allocator<KDataMuon> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_502_0_17, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<KDataMuon,allocator<KDataMuon> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_502_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<KDataMuon,allocator<KDataMuon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_502_0_19, 117, G__get_linked_tagnum(&G__dictLN_KDataMuon), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_502_0_20, 117, G__get_linked_tagnum(&G__dictLN_KDataMuon), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_502_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KDataMuon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_502_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KDataMuon,allocator<KDataMuon> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_502_0_23, 117, G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataMuon,allocator<KDataMuon> >::iterator' - 0 - position u 'KDataMuon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_502_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KDataMuon,allocator<KDataMuon> >::iterator' - 0 - position u 'vector<KDataMuon,allocator<KDataMuon> >::iterator' 'vector<KDataMuon,allocator<KDataMuon> >::const_iterator' 10 - first "
"u 'vector<KDataMuon,allocator<KDataMuon> >::iterator' 'vector<KDataMuon,allocator<KDataMuon> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_502_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<KDataMuon,allocator<KDataMuon> >::iterator' - 0 - position k - 'vector<KDataMuon,allocator<KDataMuon> >::size_type' 0 - n "
"u 'KDataMuon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_502_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_502_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<KDataMuon,allocator<KDataMuon> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_502_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<KDataMuon,allocator<KDataMuon> >::iterator' - 0 - first u 'vector<KDataMuon,allocator<KDataMuon> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_502_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<KDataMuon,allocator<KDataMuon> >", 3802, G__dict_502_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncdict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaldict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcdict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__dictLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMath = { "ROOT::Math" , 110 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLDefaultCoordinateSystemTag = { "ROOT::Math::DefaultCoordinateSystemTag" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR = { "ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR = { "ROOT::Math::Cartesian3D<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR = { "ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindricalEta3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR = { "ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindricalEta3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR = { "ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<float>,ROOT::Math::DefaultCoordinateSystemTag>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLPolar3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR = { "ROOT::Math::PositionVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLPolar3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR = { "ROOT::Math::PositionVector3D<ROOT::Math::Polar3D<float>,ROOT::Math::DefaultCoordinateSystemTag>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindrical3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR = { "ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindrical3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR = { "ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<float>,ROOT::Math::DefaultCoordinateSystemTag>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR = { "ROOT::Math::PtEtaPhiM4D<float>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR = { "ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR = { "ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegR = { "ROOT::Math::PtEtaPhiM4D<double>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegRsPgR = { "ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLRowOffsetslE3gR = { "ROOT::Math::RowOffsets<3>" , 115 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLSMatrixIdentity = { "ROOT::Math::SMatrixIdentity" , 115 , -1 };
G__linked_taginfo G__dictLN_KDataLV = { "KDataLV" , 115 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR = { "vector<KDataLV,allocator<KDataLV> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiterator = { "vector<KDataLV,allocator<KDataLV> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KDataLV,allocator<KDataLV> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_KDataVertex = { "KDataVertex" , 115 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR = { "ROOT::Math::MatRepSym<double,3>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA = { "ROOT::Math::MatRepSym<double,3>::$" , 101 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR = { "ROOT::Math::SVector<double,6>" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::$" , 101 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR = { "ROOT::Math::SVector<double,3>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR = { "vector<KDataVertex,allocator<KDataVertex> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiterator = { "vector<KDataVertex,allocator<KDataVertex> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KDataVertex,allocator<KDataVertex> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_KDataTrack = { "KDataTrack" , 115 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR = { "vector<KDataTrack,allocator<KDataTrack> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiterator = { "vector<KDataTrack,allocator<KDataTrack> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KDataTrack,allocator<KDataTrack> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_KDataJet = { "KDataJet" , 115 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR = { "vector<KDataJet,allocator<KDataJet> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiterator = { "vector<KDataJet,allocator<KDataJet> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KDataJet,allocator<KDataJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataPFJetcOallocatorlEKDataPFJetgRsPgR = { "vector<KDataPFJet,allocator<KDataPFJet> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKDataPFJetcOallocatorlEKDataPFJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KDataPFJet,allocator<KDataPFJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_KLV = { "KLV" , 115 , -1 };
G__linked_taginfo G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR = { "vector<KLV,allocator<KLV> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgRcLcLiterator = { "vector<KLV,allocator<KLV> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKLVcOallocatorlEKLVgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KLV,allocator<KLV> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_KDataMET = { "KDataMET" , 115 , -1 };
G__linked_taginfo G__dictLN_KParton = { "KParton" , 115 , -1 };
G__linked_taginfo G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR = { "vector<KParton,allocator<KParton> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiterator = { "vector<KParton,allocator<KParton> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KParton,allocator<KParton> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_KProvenance = { "KProvenance" , 115 , -1 };
G__linked_taginfo G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_KLumiMetadata = { "KLumiMetadata" , 115 , -1 };
G__linked_taginfo G__dictLN_KGenLumiMetadata = { "KGenLumiMetadata" , 115 , -1 };
G__linked_taginfo G__dictLN_KEventMetadata = { "KEventMetadata" , 115 , -1 };
G__linked_taginfo G__dictLN_KGenEventMetadata = { "KGenEventMetadata" , 115 , -1 };
G__linked_taginfo G__dictLN_KDataMuon = { "KDataMuon" , 115 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR = { "vector<KDataMuon,allocator<KDataMuon> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiterator = { "vector<KDataMuon,allocator<KDataMuon> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KDataMuon,allocator<KDataMuon> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataTaucOallocatorlEKDataTaugRsPgR = { "vector<KDataTau,allocator<KDataTau> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKDataTaucOallocatorlEKDataTaugRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KDataTau,allocator<KDataTau> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataCaloTaucOallocatorlEKDataCaloTaugRsPgR = { "vector<KDataCaloTau,allocator<KDataCaloTau> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKDataCaloTaucOallocatorlEKDataCaloTaugRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KDataCaloTau,allocator<KDataCaloTau> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataPFTaucOallocatorlEKDataPFTaugRsPgR = { "vector<KDataPFTau,allocator<KDataPFTau> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKDataPFTaucOallocatorlEKDataPFTaugRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KDataPFTau,allocator<KDataPFTau> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEKDataGenTaucOallocatorlEKDataGenTaugRsPgR = { "vector<KDataGenTau,allocator<KDataGenTau> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEKDataGenTaucOallocatorlEKDataGenTaugRsPgRcLcLiteratorgR = { "reverse_iterator<vector<KDataGenTau,allocator<KDataGenTau> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabledict() {
  G__dictLN_ROOT.tagnum = -1 ;
  G__dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMath.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLDefaultCoordinateSystemTag.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindricalEta3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindricalEta3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLPolar3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLPolar3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindrical3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindrical3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegRsPgR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLRowOffsetslE3gR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLSMatrixIdentity.tagnum = -1 ;
  G__dictLN_KDataLV.tagnum = -1 ;
  G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_KDataVertex.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR.tagnum = -1 ;
  G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_KDataTrack.tagnum = -1 ;
  G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_KDataJet.tagnum = -1 ;
  G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlEKDataPFJetcOallocatorlEKDataPFJetgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKDataPFJetcOallocatorlEKDataPFJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_KLV.tagnum = -1 ;
  G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKLVcOallocatorlEKLVgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_KDataMET.tagnum = -1 ;
  G__dictLN_KParton.tagnum = -1 ;
  G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_KProvenance.tagnum = -1 ;
  G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_KLumiMetadata.tagnum = -1 ;
  G__dictLN_KGenLumiMetadata.tagnum = -1 ;
  G__dictLN_KEventMetadata.tagnum = -1 ;
  G__dictLN_KGenEventMetadata.tagnum = -1 ;
  G__dictLN_KDataMuon.tagnum = -1 ;
  G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlEKDataTaucOallocatorlEKDataTaugRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKDataTaucOallocatorlEKDataTaugRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlEKDataCaloTaucOallocatorlEKDataCaloTaugRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKDataCaloTaucOallocatorlEKDataCaloTaugRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlEKDataPFTaucOallocatorlEKDataPFTaugRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKDataPFTaucOallocatorlEKDataPFTaugRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlEKDataGenTaucOallocatorlEKDataGenTaugRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEKDataGenTaucOallocatorlEKDataGenTaugRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabledict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__dictLN_ROOT);
   G__get_linked_tagnum_fwd(&G__dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMath);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLDefaultCoordinateSystemTag);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLCartesian3DlEfloatgR),sizeof(ROOT::Math::Cartesian3D<float>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLCartesian3DlEfloatgR,G__setup_memfuncROOTcLcLMathcLcLCartesian3DlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),sizeof(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>),-1,295168,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR,G__setup_memfuncROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindricalEta3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindricalEta3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLPolar3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLPolar3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindrical3DlEdoublegRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLPositionVector3DlEROOTcLcLMathcLcLCylindrical3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR),sizeof(ROOT::Math::PtEtaPhiM4D<float>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR,G__setup_memfuncROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR),sizeof(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >),-1,295168,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR,G__setup_memfuncROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR),sizeof(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>),-1,295168,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR,G__setup_memfuncROOTcLcLMathcLcLDisplacementVector3DlEROOTcLcLMathcLcLCartesian3DlEfloatgRcOROOTcLcLMathcLcLDefaultCoordinateSystemTaggR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLRowOffsetslE3gR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLSMatrixIdentity);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KDataLV),sizeof(KDataLV),-1,262144,(char*)NULL,G__setup_memvarKDataLV,G__setup_memfuncKDataLV);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgR),sizeof(vector<KDataLV,allocator<KDataLV> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEKDataLVcOallocatorlEKDataLVgRsPgR,G__setup_memfuncvectorlEKDataLVcOallocatorlEKDataLVgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKDataLVcOallocatorlEKDataLVgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KDataVertex),sizeof(KDataVertex),-1,262144,(char*)NULL,G__setup_memvarKDataVertex,G__setup_memfuncKDataVertex);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR),sizeof(ROOT::Math::MatRepSym<double,3>),-1,2304,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO3gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR),sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const);
   G__get_linked_tagnum_fwd(&G__dictLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR),sizeof(vector<KDataVertex,allocator<KDataVertex> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR,G__setup_memfuncvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKDataVertexcOallocatorlEKDataVertexgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KDataTrack),sizeof(KDataTrack),-1,262144,(char*)NULL,G__setup_memvarKDataTrack,G__setup_memfuncKDataTrack);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR),sizeof(vector<KDataTrack,allocator<KDataTrack> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR,G__setup_memfuncvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKDataTrackcOallocatorlEKDataTrackgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KDataJet),sizeof(KDataJet),-1,262144,(char*)NULL,G__setup_memvarKDataJet,G__setup_memfuncKDataJet);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgR),sizeof(vector<KDataJet,allocator<KDataJet> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEKDataJetcOallocatorlEKDataJetgRsPgR,G__setup_memfuncvectorlEKDataJetcOallocatorlEKDataJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKDataJetcOallocatorlEKDataJetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKDataPFJetcOallocatorlEKDataPFJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKDataPFJetcOallocatorlEKDataPFJetgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KLV),sizeof(KLV),-1,262144,(char*)NULL,G__setup_memvarKLV,G__setup_memfuncKLV);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgR),sizeof(vector<KLV,allocator<KLV> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEKLVcOallocatorlEKLVgRsPgR,G__setup_memfuncvectorlEKLVcOallocatorlEKLVgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKLVcOallocatorlEKLVgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKLVcOallocatorlEKLVgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KDataMET),sizeof(KDataMET),-1,262144,(char*)NULL,G__setup_memvarKDataMET,G__setup_memfuncKDataMET);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KParton),sizeof(KParton),-1,262144,(char*)NULL,G__setup_memvarKParton,G__setup_memfuncKParton);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgR),sizeof(vector<KParton,allocator<KParton> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEKPartoncOallocatorlEKPartongRsPgR,G__setup_memfuncvectorlEKPartoncOallocatorlEKPartongRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKPartoncOallocatorlEKPartongRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KProvenance),sizeof(KProvenance),-1,262144,(char*)NULL,G__setup_memvarKProvenance,G__setup_memfuncKProvenance);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KLumiMetadata),sizeof(KLumiMetadata),-1,262144,(char*)NULL,G__setup_memvarKLumiMetadata,G__setup_memfuncKLumiMetadata);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KGenLumiMetadata),sizeof(KGenLumiMetadata),-1,262144,(char*)NULL,G__setup_memvarKGenLumiMetadata,G__setup_memfuncKGenLumiMetadata);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KEventMetadata),sizeof(KEventMetadata),-1,262144,(char*)NULL,G__setup_memvarKEventMetadata,G__setup_memfuncKEventMetadata);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KGenEventMetadata),sizeof(KGenEventMetadata),-1,262144,(char*)NULL,G__setup_memvarKGenEventMetadata,G__setup_memfuncKGenEventMetadata);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_KDataMuon),sizeof(KDataMuon),-1,262144,(char*)NULL,G__setup_memvarKDataMuon,G__setup_memfuncKDataMuon);
   G__tagtable_setup(G__get_linked_tagnum(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgR),sizeof(vector<KDataMuon,allocator<KDataMuon> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEKDataMuoncOallocatorlEKDataMuongRsPgR,G__setup_memfuncvectorlEKDataMuoncOallocatorlEKDataMuongRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKDataMuoncOallocatorlEKDataMuongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKDataTaucOallocatorlEKDataTaugRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKDataTaucOallocatorlEKDataTaugRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKDataCaloTaucOallocatorlEKDataCaloTaugRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKDataCaloTaucOallocatorlEKDataCaloTaugRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKDataPFTaucOallocatorlEKDataPFTaugRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKDataPFTaucOallocatorlEKDataPFTaugRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEKDataGenTaucOallocatorlEKDataGenTaugRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEKDataGenTaucOallocatorlEKDataGenTaugRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupdict(void) {
  G__check_setup_version(30051515,"G__cpp_setupdict()");
  G__set_cpp_environmentdict();
  G__cpp_setup_tagtabledict();

  G__cpp_setup_inheritancedict();

  G__cpp_setup_typetabledict();

  G__cpp_setup_memvardict();

  G__cpp_setup_memfuncdict();
  G__cpp_setup_globaldict();
  G__cpp_setup_funcdict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncdict();
  return;
}
class G__cpp_setup_initdict {
  public:
    G__cpp_setup_initdict() { G__add_setup_func("dict",(G__incsetup)(&G__cpp_setupdict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initdict() { G__remove_setup_func("dict"); }
};
G__cpp_setup_initdict G__cpp_setup_initializerdict;

